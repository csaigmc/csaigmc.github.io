{"version":3,"sources":["components/Loaders.js/ArticleLoader.js","components/ArticleDisplayer.js","components/Clubs/Enigma.js"],"names":["itemStyles","makeStyles","t","item","background","palette","primary","dark","borderRadius","marginTop","marginBottom","width100","width","width60","width50","width20","width10","height196","height","breakpoints","down","height20","Item","c","className","ArticleLoader","Grid","container","style","padding","xs","md","infoStyles","theme","infoContainer","spacing","border","overflow","transition","backgroundColor","light","imazo","objectFit","title","fontFamily","FONTS_HEAD","fontWeight","color","textColor","main","textTransform","textOverflow","maxHeight","info","fontSize","subinfo","REGEX","dateFormatter","create_date","date","Date","setTime","day","getUTCDate","mon","getMonth","year","getFullYear","InfoCard","showInfo","handleClick","classes","image","text","mtch","match","imageUrl","error","findAnImage","console","log","sm","onClick","src","paddingTop","Typography","variant","author","about_author","Transition","React","forwardRef","props","ref","Slide","direction","Detailstyles","toolbar","boxShadow","shadows","borderBottom","grey","aboutAuthor","paddingBottom","meta_info_container","DetailsRenderer","showing","handleClose","Dialog","fullScreen","open","TransitionComponent","onClose","AppBar","position","Toolbar","IconButton","Icon","paddingLeft","Container","source","textAlign","DisplayStyle","notFound","loading_display","ArticleDisplayer","ToRender","queryObject","shouldDisplayInfo","useState","hasMore","setHasMore","useQuery","query_query","variables","options","skip","limit","type","query_params","data","loading","fetchMore","setLoading","usePageLoadingContext","showingDetails","setShowingDetails","useEffect","query_tablename","length","response","items","map","index","key","result","i","ti","j","push","makeResponse","dataLength","loader","endMessage","next","updateQuery","prev","fetchMoreResult","ISIS_QUERY","gql","ISIS"],"mappings":"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","file":"static/js/11.56086813.chunk.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles, Grid } from '@material-ui/core'\r\n\r\nconst itemStyles = makeStyles(t => ({\r\n    item: {\r\n        background: `${t.palette.primary.dark}8f`,\r\n        borderRadius: \"8px\",\r\n        marginTop: \"8px\",\r\n        marginBottom: \"8px\"\r\n    },\r\n    width100: {\r\n        width: \"100%\"\r\n    },\r\n    width60: {\r\n        width: \"60%\"\r\n    },\r\n    width50: {\r\n        width: \"50%\"\r\n    },\r\n    width20: {\r\n        width: \"20%\"\r\n    },\r\n    width10: {\r\n        width: \"10%\"\r\n    },\r\n    height196: {\r\n        height: \"156px\",\r\n        [t.breakpoints.down('sm')]: {\r\n            height: \"128px\"\r\n        }\r\n    },\r\n    height20: {\r\n        height: \"20px\",\r\n    }\r\n}))\r\n\r\nconst Item = () => {\r\n\r\n    const c = itemStyles()\r\n\r\n    return (\r\n        <>\r\n            <div className={`${c.item} ${c.height196} ${c.width100}`} />\r\n            <div className={`${c.item} ${c.height20} ${c.width50}`} />\r\n            <div className={`${c.item} ${c.height20} ${c.width60}`} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ArticleLoader = () => {\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item style={{padding: \"4px\"}} xs={12} md={4}><Item /></Grid>\r\n            <Grid item style={{padding: \"4px\"}} xs={12} md={4}><Item /></Grid>\r\n            <Grid item style={{padding: \"4px\"}} xs={12} md={4}><Item /></Grid>\r\n        </Grid>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport 'assets/css/theme.css'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport {FONTS_HEAD} from 'App'\r\nimport { usePageLoadingContext } from 'context'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport { Grid, makeStyles, Typography, Dialog, AppBar, Toolbar, IconButton, Icon, Container } from '@material-ui/core'\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { ArticleLoader } from './Loaders.js/ArticleLoader'\r\n\r\nconst infoStyles = makeStyles(theme => ({\r\n    infoContainer: { \r\n        padding: theme.spacing(1),\r\n        border: `1px solid transparent`,\r\n        borderRadius: \"1px\",\r\n        overflow: \"hidden\",\r\n        transition: \"0.14s all ease-in-out\",\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.primary.dark,\r\n            border: `1px solid ${theme.palette.primary.light}`,\r\n            // boxShadow: theme.shadows[2]\r\n        },\r\n        marginBottom: theme.spacing(1),\r\n        marginTop: theme.spacing(1) \r\n    },\r\n    imazo: {\r\n        width: '100%',\r\n        height: \"180px\",\r\n        objectFit: \"cover\",\r\n        [theme.breakpoints.down('md')]: {\r\n            height: '180px',\r\n        }\r\n    },\r\n    title: {\r\n        fontFamily: FONTS_HEAD,\r\n        fontWeight: \"bold\",\r\n        color: theme.textColor.main,\r\n        textTransform: 'uppercase',\r\n        overflow: 'hidden',\r\n        textOverflow: \"ellipsis\",\r\n        maxHeight: '2rem'\r\n    },\r\n    info: {\r\n        fontFamily: FONTS_HEAD,\r\n        fontSize: '16px',\r\n        color: theme.textColor.main\r\n    },\r\n    subinfo: {\r\n        fontFamily: FONTS_HEAD,\r\n        fontSize: '12px',\r\n        color: theme.textColor.dark        \r\n    }\r\n}))\r\n\r\nconst REGEX = /!\\[.*\\]\\((.*)\\)/\r\nconst findAnImage = (text) => {\r\n    const mtch = text.match(REGEX)\r\n    let imageUrl = null\r\n\r\n    if(mtch !== null){\r\n        try {\r\n            imageUrl = mtch[1]\r\n        } catch(error){\r\n            return null\r\n        }\r\n    }\r\n\r\n    return imageUrl\r\n}\r\n\r\nconst dateFormatter = (create_date) => {\r\n    const date = new Date()\r\n    date.setTime(create_date)\r\n    const day = date.getUTCDate()\r\n    const mon = date.getMonth() + 1\r\n    const year = date.getFullYear()\r\n    const fdate = `${mon}/${day}/${year}`\r\n    return fdate\r\n}\r\n\r\nconst InfoCard = ({showInfo, info, handleClick}) => {\r\n\r\n    const classes = infoStyles()\r\n    const image = findAnImage(info.text)\r\n\r\n    console.log(image)\r\n\r\n    return (\r\n        <Grid item xs={12} sm={6} md={3} className={classes.infoContainer} onClick={handleClick}>\r\n            <Grid container>\r\n                {image ? <img className={classes.imazo} src={image} /> : null}\r\n                <Grid item xs={12} style={{paddingTop: \"8px\"}}>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {info.title}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h6\" className={classes.info}>\r\n                        {info.author}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} style={{paddingTop: \"16px\"}}>\r\n                    <Typography variant=\"subtitle1\" className={classes.subinfo}>\r\n                        {dateFormatter(info.create_date)}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"subtitle1\" className={classes.subinfo}>\r\n                        {info.about_author}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Detailstyles = makeStyles(theme => ({\r\n    toolbar: {\r\n        boxShadow: theme.shadows[0],\r\n        borderBottom: `1px solid ${theme.palette.grey[200]}5f`\r\n    },\r\n    title: {\r\n        fontFamily: FONTS_HEAD,\r\n        color: \"inherit\"\r\n    },\r\n    aboutAuthor: {\r\n        fontFamily: FONTS_HEAD,\r\n        color: theme.textColor.dark,\r\n        fontSize: \"14px\"\r\n    },\r\n    author: {\r\n        fontFamily: FONTS_HEAD,\r\n        color: theme.textColor.light,\r\n        fontSize: \"14px\"\r\n    },\r\n    error:{\r\n        fontFamily: FONTS_HEAD,\r\n        color: theme.palette.grey[500]\r\n    },\r\n    text: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(3),\r\n        color: theme.textColor.main,\r\n    } ,\r\n    meta_info_container: {\r\n        border: `1px solid ${theme.palette.primary.light}`,\r\n        backgroundColor: theme.palette.primary.dark,\r\n        padding: theme.spacing(2),\r\n        borderRadius: \"1px\"\r\n    }\r\n}))\r\n\r\n\r\nconst DetailsRenderer = ({showing, info, handleClose}) => {\r\n\r\n    const classes = Detailstyles()\r\n\r\n    return (\r\n        <Dialog fullScreen open={showing} TransitionComponent={Transition} onClose={() => handleClose()}>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton color=\"inherit\" onClick={() => handleClose()}>\r\n                        <Icon>close</Icon>\r\n                    </IconButton>\r\n                    <Typography className={classes.title} style={{paddingLeft: \"8px\"}}>{info ? info.title : 'Not Found'}</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container>\r\n                {\r\n                    info ?\r\n                    <Grid container style={{paddingTop: \"84px\"}}>\r\n                        <Grid item xs={12} className={classes.meta_info_container}>\r\n                            <Typography className={classes.author}>Author: {info.author}</Typography>\r\n                            <Typography className={classes.aboutAuthor}>About Author: {info.about_author}</Typography>\r\n                            <Typography className={classes.aboutAuthor}>Created On: {dateFormatter(info.create_date)}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} className={`react-article-source ${classes.text}`}>\r\n                            <ReactMarkdown source={info.text} />\r\n                        </Grid>\r\n                    </Grid> :\r\n                    <Grid container style={{paddingTop: \"84px\"}}>\r\n                        <Grid item xs={12} style={{textAlign: \"center\"}}>\r\n                            <Typography className={classes.error} variant=\"h5\">\r\n                                \\_[^_^]_/<br /> <br />\r\n                                ERROR\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n            </Container>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n\r\nconst LIMIT = 12\r\nconst STEPPER = 4\r\n\r\nconst DisplayStyle = makeStyles(theme => ({\r\n    notFound: {\r\n        color: theme.palette.grey[600],\r\n        paddingTop: theme.spacing(5),\r\n        paddingBottom: theme.spacing(5)\r\n    },\r\n    loading_display: {\r\n        fontFamily: FONTS_HEAD,\r\n        fontSize: '16px',\r\n        color: theme.palette.grey[400]\r\n    }\r\n}))\r\n\r\nexport const ArticleDisplayer = ({queryObject, shouldDisplayInfo}) => {\r\n\r\n    const classes = DisplayStyle()\r\n    const [hasMore, setHasMore] = useState(true)\r\n\r\n    const {data, error, loading, fetchMore} = useQuery(queryObject.query_query, {\r\n        variables: {\r\n            options: {\r\n                skip: 0,\r\n                limit: LIMIT,\r\n                type: queryObject.query_params\r\n\r\n            }\r\n        }\r\n    })\r\n    const {setLoading} = usePageLoadingContext()\r\n    const [showingDetails, setShowingDetails] = useState(-1)\r\n\r\n    useEffect(() => {\r\n        if(loading === true) {\r\n            setLoading(true)\r\n        } else if(loading === false) {\r\n            setLoading(false)\r\n            if(data[queryObject.query_tablename].length < LIMIT){\r\n                setHasMore(false)\r\n            }\r\n        }\r\n    }, [loading])\r\n\r\n    let ToRender\r\n    const makeResponse = () => {\r\n        const items = data[queryObject.query_tablename].map((item, index) => {\r\n            return (\r\n                <InfoCard showInfo={shouldDisplayInfo} info={item} key={index} handleClick={() => setShowingDetails(index)}/>\r\n            )\r\n        })\r\n        const result = []\r\n        for(let i = 0; i < data[queryObject.query_tablename].length; i+=STEPPER){\r\n            const ti = []\r\n            for(let j = 0; j < STEPPER && (i + j) < data[queryObject.query_tablename].length; ++j){\r\n                ti.push(items[i+j])\r\n            }\r\n            result.push(<Grid container>{ti}</Grid>)\r\n        }\r\n        \r\n        return result\r\n    }\r\n\r\n    if(loading) {\r\n        ToRender = (\r\n            <ArticleLoader />\r\n        )\r\n    }\r\n    else if(error) {\r\n        ToRender = <div>Error</div>\r\n    }\r\n    else if(data) {\r\n        const response = makeResponse()\r\n\r\n        console.log(response)\r\n        if(response.length === 0){\r\n            ToRender = (\r\n                <>\r\n                <Grid container className={classes.notFound}>\r\n                    <Grid item xs={12} style={{textAlign: \"center\"}}>\r\n                        <Typography variant=\"h4\">\r\n                            -\\_(^_^)_/- <br /><br />\r\n                            Nothing Found\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                </>\r\n            )\r\n        } else {\r\n            ToRender = (\r\n                <>\r\n                    <InfiniteScroll\r\n                        dataLength={response.length}\r\n                        loader={<Grid container>\r\n                            <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                                <Typography className={classes.loading_display}>Loading</Typography>\r\n                            </Grid>\r\n                        </Grid>}\r\n                        endMessage={<></>}\r\n                        hasMore={hasMore}\r\n                        next={() => fetchMore({\r\n                            variables: {\r\n                                options: {\r\n                                    skip: (data.length / LIMIT),\r\n                                    limit: LIMIT,\r\n                                    type: queryObject.query_params\r\n                                }\r\n                            }, updateQuery: (prev, { fetchMoreResult }) => {\r\n                                if (!fetchMoreResult || !hasMore) return prev;\r\n                                if(fetchMoreResult[queryObject.query_tablename].length < LIMIT) {\r\n                                    setHasMore(false)\r\n                                }\r\n                                return {\r\n                                    [queryObject.query_tablename]: [\r\n                                        ...prev[queryObject.query_tablename],\r\n                                        ...fetchMoreResult[queryObject.query_tablename]\r\n                                    ]\r\n                                }\r\n                            }\r\n                        })}>\r\n                        {response}\r\n                    </InfiniteScroll>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {ToRender}\r\n            <DetailsRenderer showing={showingDetails >= 0} info={showingDetails >= 0 ? data[queryObject.query_tablename][showingDetails] : null} handleClose={() => setShowingDetails(-1)}/>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport gql from 'graphql-tag'\r\nimport {FONTS_HEAD} from 'App'\r\nimport { Grid, makeStyles, Typography } from '@material-ui/core'\r\nimport { ArticleDisplayer } from 'components/ArticleDisplayer'\r\n\r\nconst ISIS_QUERY = gql`\r\nquery allEnigma($options: InpOptions) {\r\n    allArticles(options: $options) {\r\n        _id\r\n        text\r\n        title\r\n        author\r\n        about_author\r\n        create_date\r\n    }\r\n}`\r\n\r\nconst ISIS = () => {\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <ArticleDisplayer \r\n                    queryObject={{\r\n                        query_query: ISIS_QUERY,\r\n                        query_tablename: \"allArticles\",\r\n                        query_params: \"enigma\"\r\n                    }} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ISIS "],"sourceRoot":""}