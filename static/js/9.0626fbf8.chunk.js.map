{"version":3,"sources":["../node_modules/@apollo/react-hooks/lib/react-hooks.esm.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","components/Complaints/AddComplaints.js"],"names":["OperationData","options","context","this","isMounted","previousOptions","prototype","getOptions","setOptions","newOptions","storePrevious","unmount","refreshClient","client","isNew","cleanup","verifyDocumentType","document","type","operation","QueryData","_super","_a","forceUpdate","_this","call","previousData","currentObservable","runLazy","runLazyQuery","lazyOptions","getExecuteResult","result","getQueryResult","startQuerySubscription","obsRefetch","variables","query","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","skip","removeQuerySubscription","updateObservableQuery","getExecuteSsrResult","executeLazy","loading","networkStatus","ready","called","data","undefined","fetchData","ssr","obs","getCurrentResult","afterExecute","_b","lazy","handleErrorOrCompleted","setTimeout","resetQueryStoreErrors","bind","treeRenderingInitiated","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","addQueryPromise","prepareObservableQueryOptions","Query","displayName","fetchPolicy","metadata","reactComponent","initializeObservableQuery","getSSRObservable","observableQueryOptions","children","watchQuery","registerSSRObservable","newObservableQueryOptions","catch","subscription","obsQuery","subscribe","next","previousResult","error","_error","resubscribeToQuery","hasOwnProperty","lastError","getLastError","lastResult","getLastResult","resetLastResults","Object","assign","observableQueryFields","currentResult","partial","errors","length","graphQLErrors","partialRefetch","onCompleted","onError","unsubscribe","useBaseQuery","x","tick","updatedOptions","queryDataRef","current","queryData","memoFn","key","ref","value","useDeepMemo","queryResult","useQuery","useLazyQuery","MutationData","setResult","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","then","response","onMutationCompleted","onMutationError","mutation","Mutation","mostRecentMutationId","optimisticResponse","update","mutationContext","_c","awaitRefetchQueries","mutateOptions","mutateVariables","refetchQueries","ignoreResults","updateResult","isMostRecentMutation","useMutation","mutationDataRef","mutationData","SubscriptionData","initialize","getLoadingResult","shouldResubscribe","keys","startSubscription","endSubscription","updateCurrentData","updateError","complete","completeSubscription","onSubscriptionData","subscriptionData","onSubscriptionComplete","RenderPromises","queryPromises","Map","queryInfoTrie","observable","props","lookupQueryInfo","queryInstance","finish","seen","set","Promise","resolve","hasPromises","size","consumeAndAwaitPromises","promises","forEach","promise","push","clear","all","varMap","get","has","variablesString","JSON","stringify","info","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","ADD_COMPLAINT","gql","useStyles","makeStyles","theme","background","red","color","success","green","AddComplaint","classes","useState","complaint_message","formValue","setFormValue","addComplaintDetails","sup","setLoading","usePageLoadingContext","shouldShow","setShouldShow","message","setMessage","showingMessage","setShowingMessage","console","log","useEffect","addComplaint","_id","handleSubmit","complaint","complaint_status","container","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","className","includes","item","xs","style","textAlign","fontFamily","variant","paddingTop","paddingBottom","onSubmit","spacing","fullWidth","multiline","label","onChange","e","target","name","placeholder","onClick"],"mappings":"sHAAA,wJAQIA,EAAgB,WAClB,SAASA,EAAcC,EAASC,GAC9BC,KAAKC,WAAY,EACjBD,KAAKE,gBAAkB,GACvBF,KAAKD,QAAU,GACfC,KAAKF,QAAU,GACfE,KAAKF,QAAUA,GAAW,GAC1BE,KAAKD,QAAUA,GAAW,GA+C5B,OA5CAF,EAAcM,UAAUC,WAAa,WACnC,OAAOJ,KAAKF,SAGdD,EAAcM,UAAUE,WAAa,SAAUC,EAAYC,QACnC,IAAlBA,IACFA,GAAgB,GAGdA,IAAkB,YAAMP,KAAKF,QAASQ,KACxCN,KAAKE,gBAAkBF,KAAKF,SAG9BE,KAAKF,QAAUQ,GAGjBT,EAAcM,UAAUK,QAAU,WAChCR,KAAKC,WAAY,GAGnBJ,EAAcM,UAAUM,cAAgB,WACtC,IAAIC,EAASV,KAAKF,SAAWE,KAAKF,QAAQY,QAAUV,KAAKD,SAAWC,KAAKD,QAAQW,OACzC,cAAYA,EAAQ,GAC5D,IAAIC,GAAQ,EAQZ,OANID,IAAWV,KAAKU,SAClBC,GAAQ,EACRX,KAAKU,OAASA,EACdV,KAAKY,WAGA,CACLF,OAAQV,KAAKU,OACbC,MAAOA,IAIXd,EAAcM,UAAUU,mBAAqB,SAAUC,EAAUC,GAC/D,IAAIC,EAAY,YAAOF,GACK,YAAcC,GAClB,YAAcC,EAAUD,MACR,YAAUC,EAAUD,OAASA,EAAM,IAGtElB,EAtDW,GAyDhBoB,EAAY,SAAUC,GAGxB,SAASD,EAAUE,GACjB,IAAIrB,EAAUqB,EAAGrB,QACbC,EAAUoB,EAAGpB,QACbqB,EAAcD,EAAGC,YAEjBC,EAAQH,EAAOI,KAAKtB,KAAMF,EAASC,IAAYC,KAgDnD,OA9CAqB,EAAME,aAAe,GACrBF,EAAMG,kBAAoB,GAC1BH,EAAMI,SAAU,EAEhBJ,EAAMK,aAAe,SAAU5B,GAC7BuB,EAAMT,UAENS,EAAMI,SAAU,EAChBJ,EAAMM,YAAc7B,EAEpBuB,EAAMD,eAGRC,EAAMO,iBAAmB,WACvB,IAAIC,EAASR,EAAMS,iBAInB,OAFAT,EAAMU,yBAECF,GAGTR,EAAMW,WAAa,SAAUC,GAC3B,OAAOZ,EAAMG,kBAAkBU,MAAMC,QAAQF,IAG/CZ,EAAMe,aAAe,SAAUC,GAC7B,OAAOhB,EAAMG,kBAAkBU,MAAMI,UAAUD,IAGjDhB,EAAMkB,eAAiB,SAAUC,GAC/B,OAAOnB,EAAMG,kBAAkBU,MAAMO,YAAYD,IAGnDnB,EAAMqB,gBAAkB,SAAUC,GAChCtB,EAAMG,mBAAqBH,EAAMG,kBAAkBU,OAASb,EAAMG,kBAAkBU,MAAMU,aAAaD,IAGzGtB,EAAMwB,eAAiB,WACrBxB,EAAMG,mBAAqBH,EAAMG,kBAAkBU,OAASb,EAAMG,kBAAkBU,MAAMY,eAG5FzB,EAAM0B,mBAAqB,SAAUjD,GACnC,OAAOuB,EAAMG,kBAAkBU,MAAMc,gBAAgBlD,IAGvDuB,EAAMD,YAAcA,EACbC,EAsTT,OA7WA,YAAUJ,EAAWC,GA0DrBD,EAAUd,UAAU8C,QAAU,WAC5BjD,KAAKS,gBAEL,IAAIU,EAAKnB,KAAKI,aACV8C,EAAO/B,EAAG+B,KACVhB,EAAQf,EAAGe,MASf,OAPIgB,GAAQhB,IAAUlC,KAAKuB,aAAaW,SACtClC,KAAKmD,0BACLnD,KAAKuB,aAAaW,MAAQA,GAG5BlC,KAAKoD,wBACDpD,KAAKC,WAAWD,KAAK+B,yBAClB/B,KAAKqD,uBAAyBrD,KAAK4B,oBAG5CX,EAAUd,UAAUmD,YAAc,WAChC,OAAQtD,KAAKyB,QAKR,CAACzB,KAAK0B,aAAc1B,KAAKiD,WALP,CAACjD,KAAK0B,aAAc,CACzC6B,SAAS,EACTC,cAAe,IAAcC,MAC7BC,QAAQ,EACRC,UAAMC,KAIV3C,EAAUd,UAAU0D,UAAY,WAC9B,IAAI/D,EAAUE,KAAKI,aACnB,GAAIN,EAAQoD,OAAwB,IAAhBpD,EAAQgE,IAAe,OAAO,EAClD,IAAIC,EAAM/D,KAAKwB,kBAAkBU,MAEjC,QADoB6B,EAAIC,mBACHT,SAAUQ,EAAIlC,UAGrCZ,EAAUd,UAAU8D,aAAe,SAAU9C,GAC3C,IAAIE,EAAQrB,KAERkE,QAAa,IAAP/C,EAAgB,GAAKA,GAAIgD,KAC/BA,OAAc,IAAPD,GAAwBA,EAWnC,OAVAlE,KAAKC,WAAY,EAEZkE,IAAQnE,KAAKyB,UAChBzB,KAAKoE,yBACLC,YAAW,WACThD,EAAMG,kBAAkBU,OAASb,EAAMG,kBAAkBU,MAAMoC,4BAInEtE,KAAKE,gBAAkBF,KAAKI,aACrBJ,KAAKQ,QAAQ+D,KAAKvE,OAG3BiB,EAAUd,UAAUS,QAAU,WAC5BZ,KAAKmD,iCACEnD,KAAKwB,kBAAkBU,aACvBlC,KAAKuB,aAAaM,QAG3BZ,EAAUd,UAAUC,WAAa,WAC/B,IAAIN,EAAUoB,EAAOf,UAAUC,WAAWkB,KAAKtB,MAW/C,OATIA,KAAK2B,cACP7B,EAAQmC,UAAY,YAAS,YAAS,GAAInC,EAAQmC,WAAYjC,KAAK2B,YAAYM,WAC/EnC,EAAQC,QAAU,YAAS,YAAS,GAAID,EAAQC,SAAUC,KAAK2B,YAAY5B,UAGzEC,KAAKyB,gBACA3B,EAAQoD,KAGVpD,GAGTmB,EAAUd,UAAUkD,oBAAsB,WACxC,IAcIxB,EAdA2C,EAAyBxE,KAAKD,SAAWC,KAAKD,QAAQ0E,eACtDC,GAAwC,IAA1B1E,KAAKI,aAAa0D,IAChCa,EAAgB3E,KAAKS,gBAAgBC,OAAOkE,sBAC5CC,EAAa,CACftB,SAAS,EACTC,cAAe,IAAcD,QAC7BG,QAAQ,EACRC,UAAMC,GAGR,OAAIc,IAAgBF,GAA0BG,GACrCE,GAKLL,IACF3C,EAAS7B,KAAKD,QAAQ0E,eAAeK,gBAAgB9E,KAAMA,KAAK4B,mBAAqBiD,GAGhFhD,IAGTZ,EAAUd,UAAU4E,8BAAgC,WAClD,IAAIjF,EAAUE,KAAKI,aACnBJ,KAAKa,mBAAmBf,EAAQoC,MAAO,IAAa8C,OACpD,IAAIC,EAAcnF,EAAQmF,aAAe,QAMzC,OAJIjF,KAAKD,SAAWC,KAAKD,QAAQ0E,iBAA2C,iBAAxB3E,EAAQoF,aAA0D,sBAAxBpF,EAAQoF,eACpGpF,EAAQoF,YAAc,eAGjB,YAAS,YAAS,GAAIpF,GAAU,CACrCmF,YAAaA,EACblF,QAASD,EAAQC,QACjBoF,SAAU,CACRC,eAAgB,CACdH,YAAaA,OAMrBhE,EAAUd,UAAUkF,0BAA4B,WAK9C,GAJIrF,KAAKD,SAAWC,KAAKD,QAAQ0E,iBAC/BzE,KAAKwB,kBAAkBU,MAAQlC,KAAKD,QAAQ0E,eAAea,iBAAiBtF,KAAKI,gBAG9EJ,KAAKwB,kBAAkBU,MAAO,CACjC,IAAIqD,EAAyBvF,KAAK+E,gCAClC/E,KAAKuB,aAAagE,uBAAyB,YAAS,YAAS,GAAIA,GAAyB,CACxFC,SAAU,OAEZxF,KAAKwB,kBAAkBU,MAAQlC,KAAKS,gBAAgBC,OAAO+E,WAAW,YAAS,GAAIF,IAE/EvF,KAAKD,SAAWC,KAAKD,QAAQ0E,gBAC/BzE,KAAKD,QAAQ0E,eAAeiB,sBAAsB1F,KAAKwB,kBAAkBU,MAAOqD,KAKtFtE,EAAUd,UAAUiD,sBAAwB,WAC1C,GAAKpD,KAAKwB,kBAAkBU,MAA5B,CAKA,IAAIyD,EAA4B,YAAS,YAAS,GAAI3F,KAAK+E,iCAAkC,CAC3FS,SAAU,OAGP,YAAMG,EAA2B3F,KAAKuB,aAAagE,0BACtDvF,KAAKuB,aAAagE,uBAAyBI,EAC3C3F,KAAKwB,kBAAkBU,MAAM7B,WAAWsF,GAA2BC,OAAM,qBAVzE5F,KAAKqF,6BAcTpE,EAAUd,UAAU4B,uBAAyB,WAC3C,IAAIV,EAAQrB,KAEZ,IAAIA,KAAKwB,kBAAkBqE,eAAgB7F,KAAKI,aAAa8C,KAA7D,CACA,IAAI4C,EAAW9F,KAAKwB,kBAAkBU,MACtClC,KAAKwB,kBAAkBqE,aAAeC,EAASC,UAAU,CACvDC,KAAM,SAAc7E,GAClB,IAAIoC,EAAUpC,EAAGoC,QACbC,EAAgBrC,EAAGqC,cACnBG,EAAOxC,EAAGwC,KACVsC,EAAiB5E,EAAME,aAAaM,OAEpCoE,GAAkBA,EAAe1C,UAAYA,GAAW0C,EAAezC,gBAAkBA,GAAiB,YAAMyC,EAAetC,KAAMA,IAIzItC,EAAMD,eAER8E,MAAO,SAAeC,GAGpB,GAFA9E,EAAM+E,sBAEDD,EAAOE,eAAe,iBAAkB,MAAMF,EACnD,IAAIF,EAAiB5E,EAAME,aAAaM,QAEpCoE,GAAkBA,EAAe1C,UAAY,YAAM4C,EAAQ9E,EAAME,aAAa2E,UAChF7E,EAAME,aAAa2E,MAAQC,EAE3B9E,EAAMD,oBAMdH,EAAUd,UAAUiG,mBAAqB,WACvCpG,KAAKmD,0BACL,IAAImD,EAAYtG,KAAKwB,kBAAkBU,MAAMqE,eACzCC,EAAaxG,KAAKwB,kBAAkBU,MAAMuE,gBAC9CzG,KAAKwB,kBAAkBU,MAAMwE,mBAC7B1G,KAAK+B,yBACL4E,OAAOC,OAAO5G,KAAKwB,kBAAkBU,MAAO,CAC1CoE,UAAWA,EACXE,WAAYA,KAIhBvF,EAAUd,UAAU2B,eAAiB,WACnC,IAAID,EAAS7B,KAAK6G,wBACd/G,EAAUE,KAAKI,aAEnB,GAAIN,EAAQoD,KACVrB,EAAS,YAAS,YAAS,GAAIA,GAAS,CACtC8B,UAAMC,EACNsC,WAAOtC,EACPL,SAAS,EACTG,QAAQ,QAEL,CACL,IAAIoD,EAAgB9G,KAAKwB,kBAAkBU,MAAM8B,mBAC7CT,EAAUuD,EAAcvD,QACxBwD,EAAUD,EAAcC,QACxBvD,EAAgBsD,EAActD,cAC9BwD,EAASF,EAAcE,OACvBd,EAAQY,EAAcZ,MACtBvC,EAAOmD,EAAcnD,KAezB,GAbIqD,GAAUA,EAAOC,OAAS,IAC5Bf,EAAQ,IAAI,IAAY,CACtBgB,cAAeF,KAInBnF,EAAS,YAAS,YAAS,GAAIA,GAAS,CACtC0B,QAASA,EACTC,cAAeA,EACf0C,MAAOA,EACPxC,QAAQ,IAGNH,EAAS,CACX,IAAIhC,EAAevB,KAAKuB,aAAaM,QAAU7B,KAAKuB,aAAaM,OAAO8B,KACxE9B,EAAO8B,KAAOpC,GAAgBoC,EAAO,YAAS,YAAS,GAAIpC,GAAeoC,GAAQpC,GAAgBoC,OAC7F,GAAIuC,EACTS,OAAOC,OAAO/E,EAAQ,CACpB8B,MAAO3D,KAAKwB,kBAAkBU,MAAMuE,iBAAmB,IAAI9C,WAExD,CACL,IAAIuB,EAAclF,KAAKwB,kBAAkBU,MAAMpC,QAAQoF,YAGvD,GAFqBpF,EAAQqH,iBAENxD,GAAQoD,GAA2B,eAAhB7B,EAMxC,OALAyB,OAAOC,OAAO/E,EAAQ,CACpB0B,SAAS,EACTC,cAAe,IAAcD,UAE/B1B,EAAOM,UACAN,EAGTA,EAAO8B,KAAOA,GAOlB,OAHA9B,EAAOnB,OAASV,KAAKU,OACrBV,KAAKuB,aAAagC,QAAUvD,KAAKuB,aAAaM,QAAU7B,KAAKuB,aAAaM,OAAO0B,UAAW,EAC5FvD,KAAKuB,aAAaM,OAASA,EACpBA,GAGTZ,EAAUd,UAAUiE,uBAAyB,WAC3C,IAAI0B,EAAW9F,KAAKwB,kBAAkBU,MACtC,GAAK4D,EAAL,CAEA,IAAI3E,EAAK2E,EAAS9B,mBACdL,EAAOxC,EAAGwC,KACVJ,EAAUpC,EAAGoC,QACb2C,EAAQ/E,EAAG+E,MAEf,IAAK3C,EAAS,CACZ,IAAIW,EAAKlE,KAAKI,aACV8B,EAAQgC,EAAGhC,MACXD,EAAYiC,EAAGjC,UACfmF,EAAclD,EAAGkD,YACjBC,EAAUnD,EAAGmD,QAEjB,GAAIrH,KAAKE,kBAAoBF,KAAKuB,aAAagC,SAAW,YAAMvD,KAAKE,gBAAgBgC,MAAOA,IAAU,YAAMlC,KAAKE,gBAAgB+B,UAAWA,GAC1I,OAGEmF,IAAgBlB,EAClBkB,EAAYzD,GACH0D,GAAWnB,GACpBmB,EAAQnB,MAKdjF,EAAUd,UAAUgD,wBAA0B,WACxCnD,KAAKwB,kBAAkBqE,eACzB7F,KAAKwB,kBAAkBqE,aAAayB,qBAC7BtH,KAAKwB,kBAAkBqE,eAIlC5E,EAAUd,UAAU0G,sBAAwB,WAE1C,MAAO,CACL5E,UAFejC,KAAKwB,kBAAkBU,MAEhBD,UACtBE,QAASnC,KAAKgC,WACdM,UAAWtC,KAAKoC,aAChBK,YAAazC,KAAKuC,eAClBK,aAAc5C,KAAK0C,gBACnBI,YAAa9C,KAAK6C,eAClBG,gBAAiBhD,KAAK+C,qBAInB9B,EA9WO,CA+WdpB,GAeF,SAAS0H,EAAarF,EAAOpC,EAASqE,QACvB,IAATA,IACFA,GAAO,GAGT,IAAIpE,EAAU,qBAAW,eAErBoB,EAAK,sBAAW,SAAUqG,GAC5B,OAAOA,EAAI,IACV,GACCC,EAAOtG,EAAG,GACVC,EAAcD,EAAG,GAEjBuG,EAAiB5H,EAAU,YAAS,YAAS,GAAIA,GAAU,CAC7DoC,MAAOA,IACJ,CACHA,MAAOA,GAELyF,EAAe,mBAEdA,EAAaC,UAChBD,EAAaC,QAAU,IAAI3G,EAAU,CACnCnB,QAAS4H,EACT3H,QAASA,EACTqB,YAAaA,KAIjB,IAAIyG,EAAYF,EAAaC,QAC7BC,EAAUxH,WAAWqH,GACrBG,EAAU9H,QAAUA,EACpB,IAQI8B,EApDN,SAAqBiG,EAAQC,GAC3B,IAAIC,EAAM,mBASV,OAPKA,EAAIJ,SAAY,YAAMG,EAAKC,EAAIJ,QAAQG,OAC1CC,EAAIJ,QAAU,CACZG,IAAKA,EACLE,MAAOH,MAIJE,EAAIJ,QAAQK,MA0CNC,EAAY,WACvB,OAAO/D,EAAO0D,EAAUvE,cAAgBuE,EAAU5E,YATzC,CACTnD,QAAS,YAAS,YAAS,GAAI4H,GAAiB,CAC9CL,aAASzD,EACTwD,iBAAaxD,IAEf7D,QAASA,EACT0H,KAAMA,IAKJU,EAAchE,EAAOtC,EAAO,GAAKA,EAWrC,OAVA,qBAAU,WACR,OAAOgG,EAAU5D,aAAa,CAC5BE,KAAMA,MAEP,CAACgE,EAAY5E,QAAS4E,EAAY3E,cAAe2E,EAAYjC,MAAOiC,EAAYxE,OACnF,qBAAU,WACR,OAAO,WACL,OAAOkE,EAAUjH,aAElB,IACIiB,EAGT,SAASuG,EAASlG,EAAOpC,GACvB,OAAOyH,EAAarF,EAAOpC,GAAS,GAGtC,SAASuI,EAAanG,EAAOpC,GAC3B,OAAOyH,EAAarF,EAAOpC,GAAS,GAGtC,IAAIwI,EAAe,SAAUpH,GAG3B,SAASoH,EAAanH,GACpB,IAAIrB,EAAUqB,EAAGrB,QACbC,EAAUoB,EAAGpB,QACb8B,EAASV,EAAGU,OACZ0G,EAAYpH,EAAGoH,UAEflH,EAAQH,EAAOI,KAAKtB,KAAMF,EAASC,IAAYC,KA2BnD,OAzBAqB,EAAMmH,YAAc,SAAUC,QACI,IAA5BA,IACFA,EAA0B,IAG5BpH,EAAMqH,kBAEN,IAAIC,EAAatH,EAAMuH,wBAEvB,OAAOvH,EAAMwH,OAAOJ,GAAyBK,MAAK,SAAUC,GAG1D,OAFA1H,EAAM2H,oBAAoBD,EAAUJ,GAE7BI,KACNnD,OAAM,SAAUM,GAGjB,GAFA7E,EAAM4H,gBAAgB/C,EAAOyC,IAExBtH,EAAMjB,aAAaiH,QAAS,MAAMnB,MAI3C7E,EAAMR,mBAAmBf,EAAQoJ,SAAU,IAAaC,UAExD9H,EAAMQ,OAASA,EACfR,EAAMkH,UAAYA,EAClBlH,EAAM+H,qBAAuB,EACtB/H,EAmHT,OAtJA,YAAUiH,EAAcpH,GAsCxBoH,EAAanI,UAAU8C,QAAU,SAAUpB,GAIzC,OAHA7B,KAAKC,WAAY,EACjBD,KAAKa,mBAAmBb,KAAKI,aAAa8I,SAAU,IAAaC,UACjEtH,EAAOnB,OAASV,KAAKS,gBAAgBC,OAC9B,CAACV,KAAKwI,YAAa3G,IAG5ByG,EAAanI,UAAU8D,aAAe,WAEpC,OADAjE,KAAKC,WAAY,EACVD,KAAKQ,QAAQ+D,KAAKvE,OAG3BsI,EAAanI,UAAUS,QAAU,aAEjC0H,EAAanI,UAAU0I,OAAS,SAAUJ,GACxC,IAAItH,EAAKnB,KAAKI,aACV8I,EAAW/H,EAAG+H,SACdjH,EAAYd,EAAGc,UACfoH,EAAqBlI,EAAGkI,mBACxBC,EAASnI,EAAGmI,OACZpF,EAAK/C,EAAGpB,QACRwJ,OAAyB,IAAPrF,EAAgB,GAAKA,EACvCsF,EAAKrI,EAAGsI,oBACRA,OAA6B,IAAPD,GAAwBA,EAC9CtE,EAAc/D,EAAG+D,YAEjBwE,EAAgB,YAAS,GAAIjB,GAE7BkB,EAAkBhD,OAAOC,OAAO,GAAI3E,EAAWyH,EAAczH,WAEjE,cADOyH,EAAczH,UACdjC,KAAKS,gBAAgBC,OAAOmI,OAAO,YAAS,CACjDK,SAAUA,EACVG,mBAAoBA,EACpBO,eAAgBF,EAAcE,gBAAkB5J,KAAKI,aAAawJ,eAClEH,oBAAqBA,EACrBH,OAAQA,EACRvJ,QAASwJ,EACTrE,YAAaA,EACbjD,UAAW0H,GACVD,KAGLpB,EAAanI,UAAUuI,gBAAkB,WAClC1I,KAAK6B,OAAO0B,SAAYvD,KAAKI,aAAayJ,eAC7C7J,KAAK8J,aAAa,CAChBvG,SAAS,EACT2C,WAAOtC,EACPD,UAAMC,EACNF,QAAQ,KAKd4E,EAAanI,UAAU6I,oBAAsB,SAAUD,EAAUJ,GAC/D,IAAIxH,EAAKnB,KAAKI,aACVgH,EAAcjG,EAAGiG,YACjByC,EAAgB1I,EAAG0I,cAEnBlG,EAAOoF,EAASpF,KAChBqD,EAAS+B,EAAS/B,OAClBd,EAAQc,GAAUA,EAAOC,OAAS,EAAI,IAAI,IAAY,CACxDC,cAAeF,SACZpD,EAMD5D,KAAK+J,qBAAqBpB,KAAgBkB,GAC5C7J,KAAK8J,aAAa,CAChBpG,QAAQ,EACRH,SAAS,EACTI,KAAMA,EACNuC,MAAOA,IARFkB,GAAcA,EAAYzD,IAerC2E,EAAanI,UAAU8I,gBAAkB,SAAU/C,EAAOyC,GACxD,IAAItB,EAAUrH,KAAKI,aAAaiH,QAE5BrH,KAAK+J,qBAAqBpB,IAC5B3I,KAAK8J,aAAa,CAChBvG,SAAS,EACT2C,MAAOA,EACPvC,UAAMC,EACNF,QAAQ,IAIR2D,GACFA,EAAQnB,IAIZoC,EAAanI,UAAUyI,sBAAwB,WAC7C,QAAS5I,KAAKoJ,sBAGhBd,EAAanI,UAAU4J,qBAAuB,SAAUpB,GACtD,OAAO3I,KAAKoJ,uBAAyBT,GAGvCL,EAAanI,UAAU2J,aAAe,SAAUjI,IAC1C7B,KAAKC,WAAeD,KAAKiG,gBAAmB,YAAMjG,KAAKiG,eAAgBpE,KACzE7B,KAAKuI,UAAU1G,GACf7B,KAAKiG,eAAiBpE,IAInByG,EAvJU,CAwJjBzI,GAEF,SAASmK,EAAYd,EAAUpJ,GAC7B,IAAIC,EAAU,qBAAW,eAErBoB,EAAK,mBAAS,CAChBuC,QAAQ,EACRH,SAAS,IAEP1B,EAASV,EAAG,GACZoH,EAAYpH,EAAG,GAEfuG,EAAiB5H,EAAU,YAAS,YAAS,GAAIA,GAAU,CAC7DoJ,SAAUA,IACP,CACHA,SAAUA,GAERe,EAAkB,mBAetB,IAAIC,GAZGD,EAAgBrC,UACnBqC,EAAgBrC,QAAU,IAAIU,EAAa,CACzCxI,QAAS4H,EACT3H,QAASA,EACT8B,OAAQA,EACR0G,UAAWA,KAIR0B,EAAgBrC,SASzB,OALAsC,EAAa7J,WAAWqH,GACxBwC,EAAanK,QAAUA,EACvB,qBAAU,WACR,OAAOmK,EAAajG,kBAEfiG,EAAajH,QAAQpB,IAGP,SAAUX,GAG/B,SAASiJ,EAAiBhJ,GACxB,IAAIrB,EAAUqB,EAAGrB,QACbC,EAAUoB,EAAGpB,QACbwI,EAAYpH,EAAGoH,UAEflH,EAAQH,EAAOI,KAAKtB,KAAMF,EAASC,IAAYC,KAOnD,OALAqB,EAAMG,kBAAoB,GAC1BH,EAAMkH,UAAYA,EAElBlH,EAAM+I,WAAWtK,GAEVuB,EAdT,YAAU8I,EAAkBjJ,GAiB5BiJ,EAAiBhK,UAAU8C,QAAU,SAAUpB,GAC7C,IAA+B,IAA3B7B,KAAKI,aAAa8C,KAEpB,OADAlD,KAAKY,UACE,CACL2C,SAAS,EACT2C,WAAOtC,EACPD,UAAMC,EACN3B,UAAWjC,KAAKI,aAAa6B,WAIjC,IAAI6E,EAAgBjF,EAEhB7B,KAAKS,gBAAgBE,QACvBmG,EAAgB9G,KAAKqK,oBAGvB,IAAIC,EAAoBtK,KAAKI,aAAakK,kBAc1C,MAZiC,oBAAtBA,IACTA,IAAsBA,EAAkBtK,KAAKI,gBAGrB,IAAtBkK,GAA+BtK,KAAKE,iBAAmByG,OAAO4D,KAAKvK,KAAKE,iBAAiB+G,OAAS,IAAMjH,KAAKE,gBAAgB2F,eAAiB7F,KAAKI,aAAayF,eAAiB,YAAM7F,KAAKE,gBAAgB+B,UAAWjC,KAAKI,aAAa6B,YAAcjC,KAAKE,gBAAgBgD,OAASlD,KAAKI,aAAa8C,QACzSlD,KAAKY,UACLkG,EAAgB9G,KAAKqK,oBAGvBrK,KAAKoK,WAAWpK,KAAKI,cACrBJ,KAAKwK,oBACLxK,KAAKE,gBAAkBF,KAAKI,aACrB,YAAS,YAAS,GAAI0G,GAAgB,CAC3C7E,UAAWjC,KAAKI,aAAa6B,aAIjCkI,EAAiBhK,UAAU8D,aAAe,WACxCjE,KAAKC,WAAY,GAGnBkK,EAAiBhK,UAAUS,QAAU,WACnCZ,KAAKyK,yBACEzK,KAAKwB,kBAAkBU,OAGhCiI,EAAiBhK,UAAUiK,WAAa,SAAUtK,GAC5CE,KAAKwB,kBAAkBU,QAAoC,IAA3BlC,KAAKI,aAAa8C,OACtDlD,KAAKwB,kBAAkBU,MAAQlC,KAAKS,gBAAgBC,OAAOqF,UAAU,CACnE7D,MAAOpC,EAAQ+F,aACf5D,UAAWnC,EAAQmC,UACnBiD,YAAapF,EAAQoF,gBAIzBiF,EAAiBhK,UAAUqK,kBAAoB,WACzCxK,KAAKwB,kBAAkBqE,eAC3B7F,KAAKwB,kBAAkBqE,aAAe7F,KAAKwB,kBAAkBU,MAAM6D,UAAU,CAC3EC,KAAMhG,KAAK0K,kBAAkBnG,KAAKvE,MAClCkG,MAAOlG,KAAK2K,YAAYpG,KAAKvE,MAC7B4K,SAAU5K,KAAK6K,qBAAqBtG,KAAKvE,UAI7CmK,EAAiBhK,UAAUkK,iBAAmB,WAC5C,MAAO,CACL9G,SAAS,EACT2C,WAAOtC,EACPD,UAAMC,IAIVuG,EAAiBhK,UAAU2J,aAAe,SAAUjI,GAC9C7B,KAAKC,WACPD,KAAKuI,UAAU1G,IAInBsI,EAAiBhK,UAAUuK,kBAAoB,SAAU7I,GACvD,IAAIiJ,EAAqB9K,KAAKI,aAAa0K,mBAC3C9K,KAAK8J,aAAa,CAChBnG,KAAM9B,EAAO8B,KACbJ,SAAS,EACT2C,WAAOtC,IAGLkH,GACFA,EAAmB,CACjBpK,OAAQV,KAAKS,gBAAgBC,OAC7BqK,iBAAkBlJ,KAKxBsI,EAAiBhK,UAAUwK,YAAc,SAAUzE,GACjDlG,KAAK8J,aAAa,CAChB5D,MAAOA,EACP3C,SAAS,KAIb4G,EAAiBhK,UAAU0K,qBAAuB,WAChD,IAAIG,EAAyBhL,KAAKI,aAAa4K,uBAC3CA,GAAwBA,IAC5BhL,KAAKyK,mBAGPN,EAAiBhK,UAAUsK,gBAAkB,WACvCzK,KAAKwB,kBAAkBqE,eACzB7F,KAAKwB,kBAAkBqE,aAAayB,qBAC7BtH,KAAKwB,kBAAkBqE,eA/Hb,CAoIrBhG,IAyDmB,WACnB,SAASoL,IACPjL,KAAKkL,cAAgB,IAAIC,IACzBnL,KAAKoL,cAAgB,IAAID,IAG3BF,EAAe9K,UAAUuF,sBAAwB,SAAU2F,EAAYC,GACrEtL,KAAKuL,gBAAgBD,GAAOD,WAAaA,GAG3CJ,EAAe9K,UAAUmF,iBAAmB,SAAUgG,GACpD,OAAOtL,KAAKuL,gBAAgBD,GAAOD,YAGrCJ,EAAe9K,UAAU2E,gBAAkB,SAAU0G,EAAeC,GAGlE,OAFWzL,KAAKuL,gBAAgBC,EAAcpL,cAEpCsL,KAOHD,KANLzL,KAAKkL,cAAcS,IAAIH,EAAcpL,aAAc,IAAIwL,SAAQ,SAAUC,GACvEA,EAAQL,EAAc3H,iBAEjB,OAMXoH,EAAe9K,UAAU2L,YAAc,WACrC,OAAO9L,KAAKkL,cAAca,KAAO,GAGnCd,EAAe9K,UAAU6L,wBAA0B,WACjD,IAAI3K,EAAQrB,KAERiM,EAAW,GAMf,OALAjM,KAAKkL,cAAcgB,SAAQ,SAAUC,EAASX,GAC5CnK,EAAMkK,gBAAgBC,GAAeE,MAAO,EAC5CO,EAASG,KAAKD,MAEhBnM,KAAKkL,cAAcmB,QACZT,QAAQU,IAAIL,IAGrBhB,EAAe9K,UAAUoL,gBAAkB,SAAUD,GACnD,IAAIF,EAAgBpL,KAAKoL,cACrBlJ,EAAQoJ,EAAMpJ,MACdD,EAAYqJ,EAAMrJ,UAClBsK,EAASnB,EAAcoB,IAAItK,IAAU,IAAIiJ,IACxCC,EAAcqB,IAAIvK,IAAQkJ,EAAcO,IAAIzJ,EAAOqK,GACxD,IAAIG,EAAkBC,KAAKC,UAAU3K,GACjC4K,EAAON,EAAOC,IAAIE,IAxDjB,CACLhB,MAAM,EACNL,WAAY,MAwDZ,OADKkB,EAAOE,IAAIC,IAAkBH,EAAOZ,IAAIe,EAAiBG,GACvDA,GApDU,I,iCC73BN,SAASC,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGftG,OAAOuG,OAAOvG,OAAOwG,iBAAiBJ,EAAS,CACpDC,IAAK,CACH/E,MAAOtB,OAAOuG,OAAOF,OAP3B,mC,o/BCSA,IAaMI,EAAgBC,IAAH,KAUbC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCtH,MAAO,CACHuH,WAAYC,IAAI,KAChBC,MAAOD,IAAI,MAEfE,QAAS,CACLH,WAAYI,IAAM,KAClBF,MAAOE,IAAM,UAkFNC,UA9EM,WAEjB,IAAMC,EAAUT,IAFO,EAIWU,mBAAS,CACvCC,kBAAmB,KALA,mBAIhBC,EAJgB,KAILC,EAJK,OAeYnE,YAAYoD,GAfxB,mBAehBgB,EAfgB,KAeKC,EAfL,KAgBhBC,EAAcC,cAAdD,WAhBgB,EAiBaN,oBAAS,GAjBtB,mBAiBhBQ,EAjBgB,KAiBJC,EAjBI,OAkBOT,mBAAS,cAlBhB,mBAkBhBU,EAlBgB,KAkBPC,EAlBO,OAmBqBX,oBAAS,GAnB9B,mBAmBhBY,EAnBgB,KAmBAC,EAnBA,KAqBvBC,QAAQC,IAAI,QACZD,QAAQC,IAAIV,GACZS,QAAQC,IAAI,QAEZC,qBAAU,WACHZ,GAAsC,GAAfC,EAAI9K,UAAmC,IAAfiL,IAC9CG,EAAWN,EAAInI,MAAQ,0BAAZ,4BAA6DmI,EAAI1K,KAAKsL,aAAaC,IAAnF,wDACXL,GAAkB,GAClBP,GAAW,MAEhB,CAACD,EAAI9K,UAER,IAAM4L,EAAe,WACjBN,GAAkB,GAClBP,GAAW,GACXG,GAAc,GACdL,EAAoB,CAChBnM,UAAW,CAACmN,UAAU,EAAD,GAAMlB,EAAN,CAAiBmB,iBAAkB,gBAIhE,OACI,kBAAC,IAAD,CAAMC,WAAS,GACX,kBAAC,IAAD,CAAUC,aAAc,CAACC,SAAU,MAAOC,WAAY,SAAUC,KAAMd,EAAgBe,iBAAkB,IAAOC,QAAS,kBAAMf,GAAkB,KAC5I,kBAAC,IAAD,CACCH,QAASA,EACTmB,UAAWnB,EAAQoB,SAAS,SAAW/B,EAAQ7H,MAAQ6H,EAAQH,WAEpE,kBAAC,IAAD,CAAMmC,MAAI,EAACC,GAAI,GAAIC,MAAO,CAACC,UAAW,SAAUC,WAAY,0BACxD,kBAAC,IAAD,CAAYC,QAAQ,KAAKH,MAAO,CAACI,WAAY,OAAQC,cAAe,SAApE,mBAIJ,kBAAC,IAAD,CAAMP,MAAI,EAACC,GAAI,IACf,0BAAMO,SAAUpB,GAChB,kBAAC,IAAD,CAAMG,WAAS,EAACkB,QAAS,GACrB,kBAAC,IAAD,CAAMT,MAAI,EAACC,GAAI,IACf,kBAAC,IAAD,CACIS,WAAS,EACTC,WAAS,EACTN,QAAQ,WACRO,MAAM,oBACN1I,MAAOiG,EAAUD,kBACjB2C,SAxDK,SAACC,GAClB1C,EAAa,EAAD,GACLD,EADK,eAEP2C,EAAEC,OAAOC,KAAOF,EAAEC,OAAO7I,UAsDlB8I,KAAK,oBACLC,YAAY,uBAEhB,kBAAC,IAAD,CAAMhB,GAAI,GAAIC,MAAO,CAACI,WAAY,SAC9B,kBAAC,IAAD,CAAQD,QAAQ,YAAYa,QAAS,kBAAM9B,MAA3C","file":"static/js/9.0626fbf8.chunk.js","sourcesContent":["import { parser, operationName, DocumentType, getApolloContext } from '@apollo/react-common';\nexport { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __extends, __assign } from 'tslib';\nimport React, { useRef, useContext, useReducer, useEffect, useState } from 'react';\nimport { NetworkStatus, ApolloError } from 'apollo-client';\nimport { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\n\nvar OperationData = function () {\n  function OperationData(options, context) {\n    this.isMounted = false;\n    this.previousOptions = {};\n    this.context = {};\n    this.options = {};\n    this.options = options || {};\n    this.context = context || {};\n  }\n\n  OperationData.prototype.getOptions = function () {\n    return this.options;\n  };\n\n  OperationData.prototype.setOptions = function (newOptions, storePrevious) {\n    if (storePrevious === void 0) {\n      storePrevious = false;\n    }\n\n    if (storePrevious && !equal(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n\n    this.options = newOptions;\n  };\n\n  OperationData.prototype.unmount = function () {\n    this.isMounted = false;\n  };\n\n  OperationData.prototype.refreshClient = function () {\n    var client = this.options && this.options.client || this.context && this.context.client;\n    process.env.NODE_ENV === \"production\" ? invariant(!!client, 2) : invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' + 'Wrap the root component in an <ApolloProvider>, or pass an ' + 'ApolloClient instance in via options.');\n    var isNew = false;\n\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n\n    return {\n      client: this.client,\n      isNew: isNew\n    };\n  };\n\n  OperationData.prototype.verifyDocumentType = function (document, type) {\n    var operation = parser(document);\n    var requiredOperationName = operationName(type);\n    var usedOperationName = operationName(operation.type);\n    process.env.NODE_ENV === \"production\" ? invariant(operation.type === type, 3) : invariant(operation.type === type, \"Running a \" + requiredOperationName + \" requires a graphql \" + (requiredOperationName + \", but a \" + usedOperationName + \" was used instead.\"));\n  };\n\n  return OperationData;\n}();\n\nvar QueryData = function (_super) {\n  __extends(QueryData, _super);\n\n  function QueryData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        forceUpdate = _a.forceUpdate;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.previousData = {};\n    _this.currentObservable = {};\n    _this.runLazy = false;\n\n    _this.runLazyQuery = function (options) {\n      _this.cleanup();\n\n      _this.runLazy = true;\n      _this.lazyOptions = options;\n\n      _this.forceUpdate();\n    };\n\n    _this.getExecuteResult = function () {\n      var result = _this.getQueryResult();\n\n      _this.startQuerySubscription();\n\n      return result;\n    };\n\n    _this.obsRefetch = function (variables) {\n      return _this.currentObservable.query.refetch(variables);\n    };\n\n    _this.obsFetchMore = function (fetchMoreOptions) {\n      return _this.currentObservable.query.fetchMore(fetchMoreOptions);\n    };\n\n    _this.obsUpdateQuery = function (mapFn) {\n      return _this.currentObservable.query.updateQuery(mapFn);\n    };\n\n    _this.obsStartPolling = function (pollInterval) {\n      _this.currentObservable && _this.currentObservable.query && _this.currentObservable.query.startPolling(pollInterval);\n    };\n\n    _this.obsStopPolling = function () {\n      _this.currentObservable && _this.currentObservable.query && _this.currentObservable.query.stopPolling();\n    };\n\n    _this.obsSubscribeToMore = function (options) {\n      return _this.currentObservable.query.subscribeToMore(options);\n    };\n\n    _this.forceUpdate = forceUpdate;\n    return _this;\n  }\n\n  QueryData.prototype.execute = function () {\n    this.refreshClient();\n\n    var _a = this.getOptions(),\n        skip = _a.skip,\n        query = _a.query;\n\n    if (skip || query !== this.previousData.query) {\n      this.removeQuerySubscription();\n      this.previousData.query = query;\n    }\n\n    this.updateObservableQuery();\n    if (this.isMounted) this.startQuerySubscription();\n    return this.getExecuteSsrResult() || this.getExecuteResult();\n  };\n\n  QueryData.prototype.executeLazy = function () {\n    return !this.runLazy ? [this.runLazyQuery, {\n      loading: false,\n      networkStatus: NetworkStatus.ready,\n      called: false,\n      data: undefined\n    }] : [this.runLazyQuery, this.execute()];\n  };\n\n  QueryData.prototype.fetchData = function () {\n    var options = this.getOptions();\n    if (options.skip || options.ssr === false) return false;\n    var obs = this.currentObservable.query;\n    var currentResult = obs.getCurrentResult();\n    return currentResult.loading ? obs.result() : false;\n  };\n\n  QueryData.prototype.afterExecute = function (_a) {\n    var _this = this;\n\n    var _b = (_a === void 0 ? {} : _a).lazy,\n        lazy = _b === void 0 ? false : _b;\n    this.isMounted = true;\n\n    if (!lazy || this.runLazy) {\n      this.handleErrorOrCompleted();\n      setTimeout(function () {\n        _this.currentObservable.query && _this.currentObservable.query.resetQueryStoreErrors();\n      });\n    }\n\n    this.previousOptions = this.getOptions();\n    return this.unmount.bind(this);\n  };\n\n  QueryData.prototype.cleanup = function () {\n    this.removeQuerySubscription();\n    delete this.currentObservable.query;\n    delete this.previousData.result;\n  };\n\n  QueryData.prototype.getOptions = function () {\n    var options = _super.prototype.getOptions.call(this);\n\n    if (this.lazyOptions) {\n      options.variables = __assign(__assign({}, options.variables), this.lazyOptions.variables);\n      options.context = __assign(__assign({}, options.context), this.lazyOptions.context);\n    }\n\n    if (this.runLazy) {\n      delete options.skip;\n    }\n\n    return options;\n  };\n\n  QueryData.prototype.getExecuteSsrResult = function () {\n    var treeRenderingInitiated = this.context && this.context.renderPromises;\n    var ssrDisabled = this.getOptions().ssr === false;\n    var fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n    var ssrLoading = {\n      loading: true,\n      networkStatus: NetworkStatus.loading,\n      called: true,\n      data: undefined\n    };\n\n    if (ssrDisabled && (treeRenderingInitiated || fetchDisabled)) {\n      return ssrLoading;\n    }\n\n    var result;\n\n    if (treeRenderingInitiated) {\n      result = this.context.renderPromises.addQueryPromise(this, this.getExecuteResult) || ssrLoading;\n    }\n\n    return result;\n  };\n\n  QueryData.prototype.prepareObservableQueryOptions = function () {\n    var options = this.getOptions();\n    this.verifyDocumentType(options.query, DocumentType.Query);\n    var displayName = options.displayName || 'Query';\n\n    if (this.context && this.context.renderPromises && (options.fetchPolicy === 'network-only' || options.fetchPolicy === 'cache-and-network')) {\n      options.fetchPolicy = 'cache-first';\n    }\n\n    return __assign(__assign({}, options), {\n      displayName: displayName,\n      context: options.context,\n      metadata: {\n        reactComponent: {\n          displayName: displayName\n        }\n      }\n    });\n  };\n\n  QueryData.prototype.initializeObservableQuery = function () {\n    if (this.context && this.context.renderPromises) {\n      this.currentObservable.query = this.context.renderPromises.getSSRObservable(this.getOptions());\n    }\n\n    if (!this.currentObservable.query) {\n      var observableQueryOptions = this.prepareObservableQueryOptions();\n      this.previousData.observableQueryOptions = __assign(__assign({}, observableQueryOptions), {\n        children: null\n      });\n      this.currentObservable.query = this.refreshClient().client.watchQuery(__assign({}, observableQueryOptions));\n\n      if (this.context && this.context.renderPromises) {\n        this.context.renderPromises.registerSSRObservable(this.currentObservable.query, observableQueryOptions);\n      }\n    }\n  };\n\n  QueryData.prototype.updateObservableQuery = function () {\n    if (!this.currentObservable.query) {\n      this.initializeObservableQuery();\n      return;\n    }\n\n    var newObservableQueryOptions = __assign(__assign({}, this.prepareObservableQueryOptions()), {\n      children: null\n    });\n\n    if (!equal(newObservableQueryOptions, this.previousData.observableQueryOptions)) {\n      this.previousData.observableQueryOptions = newObservableQueryOptions;\n      this.currentObservable.query.setOptions(newObservableQueryOptions).catch(function () {});\n    }\n  };\n\n  QueryData.prototype.startQuerySubscription = function () {\n    var _this = this;\n\n    if (this.currentObservable.subscription || this.getOptions().skip) return;\n    var obsQuery = this.currentObservable.query;\n    this.currentObservable.subscription = obsQuery.subscribe({\n      next: function next(_a) {\n        var loading = _a.loading,\n            networkStatus = _a.networkStatus,\n            data = _a.data;\n        var previousResult = _this.previousData.result;\n\n        if (previousResult && previousResult.loading === loading && previousResult.networkStatus === networkStatus && equal(previousResult.data, data)) {\n          return;\n        }\n\n        _this.forceUpdate();\n      },\n      error: function error(_error) {\n        _this.resubscribeToQuery();\n\n        if (!_error.hasOwnProperty('graphQLErrors')) throw _error;\n        var previousResult = _this.previousData.result;\n\n        if (previousResult && previousResult.loading || !equal(_error, _this.previousData.error)) {\n          _this.previousData.error = _error;\n\n          _this.forceUpdate();\n        }\n      }\n    });\n  };\n\n  QueryData.prototype.resubscribeToQuery = function () {\n    this.removeQuerySubscription();\n    var lastError = this.currentObservable.query.getLastError();\n    var lastResult = this.currentObservable.query.getLastResult();\n    this.currentObservable.query.resetLastResults();\n    this.startQuerySubscription();\n    Object.assign(this.currentObservable.query, {\n      lastError: lastError,\n      lastResult: lastResult\n    });\n  };\n\n  QueryData.prototype.getQueryResult = function () {\n    var result = this.observableQueryFields();\n    var options = this.getOptions();\n\n    if (options.skip) {\n      result = __assign(__assign({}, result), {\n        data: undefined,\n        error: undefined,\n        loading: false,\n        called: true\n      });\n    } else {\n      var currentResult = this.currentObservable.query.getCurrentResult();\n      var loading = currentResult.loading,\n          partial = currentResult.partial,\n          networkStatus = currentResult.networkStatus,\n          errors = currentResult.errors;\n      var error = currentResult.error,\n          data = currentResult.data;\n\n      if (errors && errors.length > 0) {\n        error = new ApolloError({\n          graphQLErrors: errors\n        });\n      }\n\n      result = __assign(__assign({}, result), {\n        loading: loading,\n        networkStatus: networkStatus,\n        error: error,\n        called: true\n      });\n\n      if (loading) {\n        var previousData = this.previousData.result && this.previousData.result.data;\n        result.data = previousData && data ? __assign(__assign({}, previousData), data) : previousData || data;\n      } else if (error) {\n        Object.assign(result, {\n          data: (this.currentObservable.query.getLastResult() || {}).data\n        });\n      } else {\n        var fetchPolicy = this.currentObservable.query.options.fetchPolicy;\n        var partialRefetch = options.partialRefetch;\n\n        if (partialRefetch && !data && partial && fetchPolicy !== 'cache-only') {\n          Object.assign(result, {\n            loading: true,\n            networkStatus: NetworkStatus.loading\n          });\n          result.refetch();\n          return result;\n        }\n\n        result.data = data;\n      }\n    }\n\n    result.client = this.client;\n    this.previousData.loading = this.previousData.result && this.previousData.result.loading || false;\n    this.previousData.result = result;\n    return result;\n  };\n\n  QueryData.prototype.handleErrorOrCompleted = function () {\n    var obsQuery = this.currentObservable.query;\n    if (!obsQuery) return;\n\n    var _a = obsQuery.getCurrentResult(),\n        data = _a.data,\n        loading = _a.loading,\n        error = _a.error;\n\n    if (!loading) {\n      var _b = this.getOptions(),\n          query = _b.query,\n          variables = _b.variables,\n          onCompleted = _b.onCompleted,\n          onError = _b.onError;\n\n      if (this.previousOptions && !this.previousData.loading && equal(this.previousOptions.query, query) && equal(this.previousOptions.variables, variables)) {\n        return;\n      }\n\n      if (onCompleted && !error) {\n        onCompleted(data);\n      } else if (onError && error) {\n        onError(error);\n      }\n    }\n  };\n\n  QueryData.prototype.removeQuerySubscription = function () {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  };\n\n  QueryData.prototype.observableQueryFields = function () {\n    var observable = this.currentObservable.query;\n    return {\n      variables: observable.variables,\n      refetch: this.obsRefetch,\n      fetchMore: this.obsFetchMore,\n      updateQuery: this.obsUpdateQuery,\n      startPolling: this.obsStartPolling,\n      stopPolling: this.obsStopPolling,\n      subscribeToMore: this.obsSubscribeToMore\n    };\n  };\n\n  return QueryData;\n}(OperationData);\n\nfunction useDeepMemo(memoFn, key) {\n  var ref = useRef();\n\n  if (!ref.current || !equal(key, ref.current.key)) {\n    ref.current = {\n      key: key,\n      value: memoFn()\n    };\n  }\n\n  return ref.current.value;\n}\n\nfunction useBaseQuery(query, options, lazy) {\n  if (lazy === void 0) {\n    lazy = false;\n  }\n\n  var context = useContext(getApolloContext());\n\n  var _a = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      tick = _a[0],\n      forceUpdate = _a[1];\n\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    query: query\n  }) : {\n    query: query\n  };\n  var queryDataRef = useRef();\n\n  if (!queryDataRef.current) {\n    queryDataRef.current = new QueryData({\n      options: updatedOptions,\n      context: context,\n      forceUpdate: forceUpdate\n    });\n  }\n\n  var queryData = queryDataRef.current;\n  queryData.setOptions(updatedOptions);\n  queryData.context = context;\n  var memo = {\n    options: __assign(__assign({}, updatedOptions), {\n      onError: undefined,\n      onCompleted: undefined\n    }),\n    context: context,\n    tick: tick\n  };\n  var result = useDeepMemo(function () {\n    return lazy ? queryData.executeLazy() : queryData.execute();\n  }, memo);\n  var queryResult = lazy ? result[1] : result;\n  useEffect(function () {\n    return queryData.afterExecute({\n      lazy: lazy\n    });\n  }, [queryResult.loading, queryResult.networkStatus, queryResult.error, queryResult.data]);\n  useEffect(function () {\n    return function () {\n      return queryData.cleanup();\n    };\n  }, []);\n  return result;\n}\n\nfunction useQuery(query, options) {\n  return useBaseQuery(query, options, false);\n}\n\nfunction useLazyQuery(query, options) {\n  return useBaseQuery(query, options, true);\n}\n\nvar MutationData = function (_super) {\n  __extends(MutationData, _super);\n\n  function MutationData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        result = _a.result,\n        setResult = _a.setResult;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.runMutation = function (mutationFunctionOptions) {\n      if (mutationFunctionOptions === void 0) {\n        mutationFunctionOptions = {};\n      }\n\n      _this.onMutationStart();\n\n      var mutationId = _this.generateNewMutationId();\n\n      return _this.mutate(mutationFunctionOptions).then(function (response) {\n        _this.onMutationCompleted(response, mutationId);\n\n        return response;\n      }).catch(function (error) {\n        _this.onMutationError(error, mutationId);\n\n        if (!_this.getOptions().onError) throw error;\n      });\n    };\n\n    _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n\n    _this.result = result;\n    _this.setResult = setResult;\n    _this.mostRecentMutationId = 0;\n    return _this;\n  }\n\n  MutationData.prototype.execute = function (result) {\n    this.isMounted = true;\n    this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n    result.client = this.refreshClient().client;\n    return [this.runMutation, result];\n  };\n\n  MutationData.prototype.afterExecute = function () {\n    this.isMounted = true;\n    return this.unmount.bind(this);\n  };\n\n  MutationData.prototype.cleanup = function () {};\n\n  MutationData.prototype.mutate = function (mutationFunctionOptions) {\n    var _a = this.getOptions(),\n        mutation = _a.mutation,\n        variables = _a.variables,\n        optimisticResponse = _a.optimisticResponse,\n        update = _a.update,\n        _b = _a.context,\n        mutationContext = _b === void 0 ? {} : _b,\n        _c = _a.awaitRefetchQueries,\n        awaitRefetchQueries = _c === void 0 ? false : _c,\n        fetchPolicy = _a.fetchPolicy;\n\n    var mutateOptions = __assign({}, mutationFunctionOptions);\n\n    var mutateVariables = Object.assign({}, variables, mutateOptions.variables);\n    delete mutateOptions.variables;\n    return this.refreshClient().client.mutate(__assign({\n      mutation: mutation,\n      optimisticResponse: optimisticResponse,\n      refetchQueries: mutateOptions.refetchQueries || this.getOptions().refetchQueries,\n      awaitRefetchQueries: awaitRefetchQueries,\n      update: update,\n      context: mutationContext,\n      fetchPolicy: fetchPolicy,\n      variables: mutateVariables\n    }, mutateOptions));\n  };\n\n  MutationData.prototype.onMutationStart = function () {\n    if (!this.result.loading && !this.getOptions().ignoreResults) {\n      this.updateResult({\n        loading: true,\n        error: undefined,\n        data: undefined,\n        called: true\n      });\n    }\n  };\n\n  MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n    var _a = this.getOptions(),\n        onCompleted = _a.onCompleted,\n        ignoreResults = _a.ignoreResults;\n\n    var data = response.data,\n        errors = response.errors;\n    var error = errors && errors.length > 0 ? new ApolloError({\n      graphQLErrors: errors\n    }) : undefined;\n\n    var callOncomplete = function callOncomplete() {\n      return onCompleted ? onCompleted(data) : null;\n    };\n\n    if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n      this.updateResult({\n        called: true,\n        loading: false,\n        data: data,\n        error: error\n      });\n    }\n\n    callOncomplete();\n  };\n\n  MutationData.prototype.onMutationError = function (error, mutationId) {\n    var onError = this.getOptions().onError;\n\n    if (this.isMostRecentMutation(mutationId)) {\n      this.updateResult({\n        loading: false,\n        error: error,\n        data: undefined,\n        called: true\n      });\n    }\n\n    if (onError) {\n      onError(error);\n    }\n  };\n\n  MutationData.prototype.generateNewMutationId = function () {\n    return ++this.mostRecentMutationId;\n  };\n\n  MutationData.prototype.isMostRecentMutation = function (mutationId) {\n    return this.mostRecentMutationId === mutationId;\n  };\n\n  MutationData.prototype.updateResult = function (result) {\n    if (this.isMounted && (!this.previousResult || !equal(this.previousResult, result))) {\n      this.setResult(result);\n      this.previousResult = result;\n    }\n  };\n\n  return MutationData;\n}(OperationData);\n\nfunction useMutation(mutation, options) {\n  var context = useContext(getApolloContext());\n\n  var _a = useState({\n    called: false,\n    loading: false\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    mutation: mutation\n  }) : {\n    mutation: mutation\n  };\n  var mutationDataRef = useRef();\n\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData({\n        options: updatedOptions,\n        context: context,\n        result: result,\n        setResult: setResult\n      });\n    }\n\n    return mutationDataRef.current;\n  }\n\n  var mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n  useEffect(function () {\n    return mutationData.afterExecute();\n  });\n  return mutationData.execute(result);\n}\n\nvar SubscriptionData = function (_super) {\n  __extends(SubscriptionData, _super);\n\n  function SubscriptionData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        setResult = _a.setResult;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.currentObservable = {};\n    _this.setResult = setResult;\n\n    _this.initialize(options);\n\n    return _this;\n  }\n\n  SubscriptionData.prototype.execute = function (result) {\n    if (this.getOptions().skip === true) {\n      this.cleanup();\n      return {\n        loading: false,\n        error: undefined,\n        data: undefined,\n        variables: this.getOptions().variables\n      };\n    }\n\n    var currentResult = result;\n\n    if (this.refreshClient().isNew) {\n      currentResult = this.getLoadingResult();\n    }\n\n    var shouldResubscribe = this.getOptions().shouldResubscribe;\n\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(this.getOptions());\n    }\n\n    if (shouldResubscribe !== false && this.previousOptions && Object.keys(this.previousOptions).length > 0 && (this.previousOptions.subscription !== this.getOptions().subscription || !equal(this.previousOptions.variables, this.getOptions().variables) || this.previousOptions.skip !== this.getOptions().skip)) {\n      this.cleanup();\n      currentResult = this.getLoadingResult();\n    }\n\n    this.initialize(this.getOptions());\n    this.startSubscription();\n    this.previousOptions = this.getOptions();\n    return __assign(__assign({}, currentResult), {\n      variables: this.getOptions().variables\n    });\n  };\n\n  SubscriptionData.prototype.afterExecute = function () {\n    this.isMounted = true;\n  };\n\n  SubscriptionData.prototype.cleanup = function () {\n    this.endSubscription();\n    delete this.currentObservable.query;\n  };\n\n  SubscriptionData.prototype.initialize = function (options) {\n    if (this.currentObservable.query || this.getOptions().skip === true) return;\n    this.currentObservable.query = this.refreshClient().client.subscribe({\n      query: options.subscription,\n      variables: options.variables,\n      fetchPolicy: options.fetchPolicy\n    });\n  };\n\n  SubscriptionData.prototype.startSubscription = function () {\n    if (this.currentObservable.subscription) return;\n    this.currentObservable.subscription = this.currentObservable.query.subscribe({\n      next: this.updateCurrentData.bind(this),\n      error: this.updateError.bind(this),\n      complete: this.completeSubscription.bind(this)\n    });\n  };\n\n  SubscriptionData.prototype.getLoadingResult = function () {\n    return {\n      loading: true,\n      error: undefined,\n      data: undefined\n    };\n  };\n\n  SubscriptionData.prototype.updateResult = function (result) {\n    if (this.isMounted) {\n      this.setResult(result);\n    }\n  };\n\n  SubscriptionData.prototype.updateCurrentData = function (result) {\n    var onSubscriptionData = this.getOptions().onSubscriptionData;\n    this.updateResult({\n      data: result.data,\n      loading: false,\n      error: undefined\n    });\n\n    if (onSubscriptionData) {\n      onSubscriptionData({\n        client: this.refreshClient().client,\n        subscriptionData: result\n      });\n    }\n  };\n\n  SubscriptionData.prototype.updateError = function (error) {\n    this.updateResult({\n      error: error,\n      loading: false\n    });\n  };\n\n  SubscriptionData.prototype.completeSubscription = function () {\n    var onSubscriptionComplete = this.getOptions().onSubscriptionComplete;\n    if (onSubscriptionComplete) onSubscriptionComplete();\n    this.endSubscription();\n  };\n\n  SubscriptionData.prototype.endSubscription = function () {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  };\n\n  return SubscriptionData;\n}(OperationData);\n\nfunction useSubscription(subscription, options) {\n  var context = useContext(getApolloContext());\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    subscription: subscription\n  }) : {\n    subscription: subscription\n  };\n\n  var _a = useState({\n    loading: !updatedOptions.skip,\n    error: undefined,\n    data: undefined\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var subscriptionDataRef = useRef();\n\n  function getSubscriptionDataRef() {\n    if (!subscriptionDataRef.current) {\n      subscriptionDataRef.current = new SubscriptionData({\n        options: updatedOptions,\n        context: context,\n        setResult: setResult\n      });\n    }\n\n    return subscriptionDataRef.current;\n  }\n\n  var subscriptionData = getSubscriptionDataRef();\n  subscriptionData.setOptions(updatedOptions, true);\n  subscriptionData.context = context;\n  useEffect(function () {\n    return subscriptionData.afterExecute();\n  });\n  useEffect(function () {\n    return subscriptionData.cleanup.bind(subscriptionData);\n  }, []);\n  return subscriptionData.execute(result);\n}\n\nfunction useApolloClient() {\n  var client = React.useContext(getApolloContext()).client;\n  process.env.NODE_ENV === \"production\" ? invariant(client, 1) : invariant(client, 'No Apollo Client instance can be found. Please ensure that you ' + 'have called `ApolloProvider` higher up in your tree.');\n  return client;\n}\n\nfunction makeDefaultQueryInfo() {\n  return {\n    seen: false,\n    observable: null\n  };\n}\n\nvar RenderPromises = function () {\n  function RenderPromises() {\n    this.queryPromises = new Map();\n    this.queryInfoTrie = new Map();\n  }\n\n  RenderPromises.prototype.registerSSRObservable = function (observable, props) {\n    this.lookupQueryInfo(props).observable = observable;\n  };\n\n  RenderPromises.prototype.getSSRObservable = function (props) {\n    return this.lookupQueryInfo(props).observable;\n  };\n\n  RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\n    var info = this.lookupQueryInfo(queryInstance.getOptions());\n\n    if (!info.seen) {\n      this.queryPromises.set(queryInstance.getOptions(), new Promise(function (resolve) {\n        resolve(queryInstance.fetchData());\n      }));\n      return null;\n    }\n\n    return finish();\n  };\n\n  RenderPromises.prototype.hasPromises = function () {\n    return this.queryPromises.size > 0;\n  };\n\n  RenderPromises.prototype.consumeAndAwaitPromises = function () {\n    var _this = this;\n\n    var promises = [];\n    this.queryPromises.forEach(function (promise, queryInstance) {\n      _this.lookupQueryInfo(queryInstance).seen = true;\n      promises.push(promise);\n    });\n    this.queryPromises.clear();\n    return Promise.all(promises);\n  };\n\n  RenderPromises.prototype.lookupQueryInfo = function (props) {\n    var queryInfoTrie = this.queryInfoTrie;\n    var query = props.query,\n        variables = props.variables;\n    var varMap = queryInfoTrie.get(query) || new Map();\n    if (!queryInfoTrie.has(query)) queryInfoTrie.set(query, varMap);\n    var variablesString = JSON.stringify(variables);\n    var info = varMap.get(variablesString) || makeDefaultQueryInfo();\n    if (!varMap.has(variablesString)) varMap.set(variablesString, info);\n    return info;\n  };\n\n  return RenderPromises;\n}();\n\nexport { RenderPromises, useApolloClient, useLazyQuery, useMutation, useQuery, useSubscription };","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import React, { useState, useEffect } from 'react'\r\nimport 'assets/css/theme.css'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { usePageLoadingContext } from 'context'\r\nimport gql from 'graphql-tag'\r\nimport { Grid, Snackbar, TextField, Typography, Button, SnackbarContent, FormControl, FormHelperText } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport {green, red} from '@material-ui/core/colors'\r\n\r\nconst InputBox = ({label, value, onChange, name, placeholder}) => {\r\n    return (\r\n        <div className=\"row\">\r\n        <div className=\"col-12 px-0 bg-primary-light\">\r\n            <label className=\"px-2 py-0 font-head\" style={{fontSize: \"14px\"}}>{label}</label>\r\n            <div>\r\n                <input className=\"input px-2 pb-1\" style={{width: \"100%\", background: \"transparent\"}} type=\"text\" value={value} onChange={onChange} name={name} />\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ADD_COMPLAINT = gql`\r\nmutation AddComplaint($complaint: InpComplaint!) {\r\n    addComplaint(complaint: $complaint) {\r\n        _id\r\n        complaint_message\r\n        create_date\r\n    }\r\n}\r\n`\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    error: {\r\n        background: red[800],\r\n        color: red[200]\r\n    },\r\n    success: {\r\n        background: green[800],\r\n        color: green[200]\r\n    }\r\n}))\r\n\r\nconst AddComplaint = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [formValue, setFormValue] = useState({\r\n        complaint_message: \"\"\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        setFormValue({\r\n            ...formValue,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    } \r\n\r\n    const [addComplaintDetails, sup] = useMutation(ADD_COMPLAINT)\r\n    const {setLoading} = usePageLoadingContext()\r\n    const [shouldShow, setShouldShow] = useState(false)\r\n    const [message, setMessage] = useState(\"Dummy Text\")\r\n    const [showingMessage, setShowingMessage] = useState(false)\r\n\r\n    console.log(\"____\")\r\n    console.log(sup)\r\n    console.log(\"____\")\r\n\r\n    useEffect(() => {\r\n        if(addComplaintDetails && sup.loading == false && shouldShow === true){\r\n            setMessage(sup.error ? \"Error Adding Complaint.\" : `Added Complaint: #${sup.data.addComplaint._id}. Please keep it to see progress of your Complaint.`)\r\n            setShowingMessage(true)\r\n            setLoading(false)\r\n        } \r\n    }, [sup.loading])\r\n\r\n    const handleSubmit = () => {\r\n        setShowingMessage(false)\r\n        setLoading(true)\r\n        setShouldShow(true)\r\n        addComplaintDetails({\r\n            variables: {complaint: {...formValue, complaint_status: \"pending\"}}\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Grid container>\r\n            <Snackbar anchorOrigin={{vertical: \"top\", horizontal: \"right\"}} open={showingMessage} autoHideDuration={10000} onClose={() => setShowingMessage(false)}>\r\n                <SnackbarContent \r\n                 message={message}\r\n                 className={message.includes('Error') ? classes.error : classes.success}/>\r\n            </Snackbar>\r\n            <Grid item xs={12} style={{textAlign: \"center\", fontFamily: \"Comfortaa, sans-serif\"}}>\r\n                <Typography variant=\"h5\" style={{paddingTop: \"12px\", paddingBottom: \"12px\"}}>\r\n                    Complaint Form\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                <TextField \r\n                    fullWidth\r\n                    multiline\r\n                    variant=\"outlined\"\r\n                    label=\"Complaint Message\"\r\n                    value={formValue.complaint_message}\r\n                    onChange={handleChange}\r\n                    name=\"complaint_message\"\r\n                    placeholder=\"Complaint Message\"/>\r\n                </Grid>\r\n                <Grid xs={12} style={{paddingTop: \"16px\"}}>\r\n                    <Button variant=\"contained\" onClick={() => handleSubmit()}>Submit</Button>\r\n                </Grid>\r\n                </Grid>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default AddComplaint"],"sourceRoot":""}