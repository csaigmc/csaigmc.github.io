{"version":3,"sources":["components/ArticleDisplayer.js","components/Clubs/ISIS.js"],"names":["infoStyles","makeStyles","theme","infoContainer","padding","spacing","border","borderRadius","overflow","transition","backgroundColor","palette","grey","boxShadow","shadows","marginBottom","marginTop","imazo","width","height","objectFit","breakpoints","down","title","fontFamily","FONTS_HEAD","fontWeight","color","textTransform","textOverflow","maxHeight","info","fontSize","subinfo","REGEX","dateFormatter","create_date","date","Date","setTime","day","getUTCDate","mon","getMonth","year","getFullYear","InfoCard","showInfo","handleClick","classes","image","text","mtch","match","imageUrl","error","findAnImage","console","log","item","xs","sm","md","className","onClick","container","src","style","paddingTop","variant","author","about_author","Transition","React","forwardRef","props","ref","direction","Detailstyles","aboutAuthor","paddingBottom","meta_info_container","primary","dark","DetailsRenderer","showing","handleClose","fullScreen","open","TransitionComponent","onClose","position","paddingLeft","source","textAlign","DisplayStyle","notFound","loading_display","ArticleDisplayer","ToRender","queryObject","shouldDisplayInfo","useState","hasMore","setHasMore","useQuery","query_query","variables","options","skip","limit","type","query_params","data","loading","fetchMore","setLoading","usePageLoadingContext","showingDetails","setShowingDetails","useEffect","query_tablename","length","response","items","map","index","key","result","i","ti","j","push","makeResponse","dataLength","loader","endMessage","next","updateQuery","prev","fetchMoreResult","ISIS_QUERY","gql","ISIS"],"mappings":"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","file":"static/js/13.379cc4ba.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport 'assets/css/theme.css'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport {FONTS_HEAD} from 'App'\r\nimport gql from 'graphql-tag'\r\nimport { usePageLoadingContext } from 'context'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport { Grid, makeStyles, Typography, Dialog, AppBar, Toolbar, IconButton, Icon, Container } from '@material-ui/core'\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Footer } from './Footer/Footer'\r\n\r\nconst infoStyles = makeStyles(theme => ({\r\n    infoContainer: { \r\n        padding: theme.spacing(1),\r\n        border: `1px solid transparent`,\r\n        borderRadius: \"0px\",\r\n        overflow: \"hidden\",\r\n        transition: \"0.14s all ease-in-out\",\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.grey[800],\r\n            border: `1px solid ${theme.palette.grey[700]}`,\r\n            boxShadow: theme.shadows[3]\r\n        },\r\n        marginBottom: theme.spacing(1),\r\n        marginTop: theme.spacing(1) \r\n    },\r\n    imazo: {\r\n        width: '100%',\r\n        height: \"180px\",\r\n        objectFit: \"cover\",\r\n        [theme.breakpoints.down('md')]: {\r\n            height: '180px',\r\n        }\r\n    },\r\n    title: {\r\n        fontFamily: FONTS_HEAD,\r\n        fontWeight: \"bold\",\r\n        color: '#fff',\r\n        textTransform: 'uppercase',\r\n        overflow: 'hidden',\r\n        textOverflow: \"ellipsis\",\r\n        maxHeight: '2rem'\r\n    },\r\n    info: {\r\n        fontFamily: FONTS_HEAD,\r\n        fontSize: '16px',\r\n        color: theme.palette.grey[100]\r\n    },\r\n    subinfo: {\r\n        fontFamily: FONTS_HEAD,\r\n        fontSize: '12px',\r\n        color: theme.palette.grey[400]        \r\n    }\r\n}))\r\n\r\nconst REGEX = /!\\[.*\\]\\((.*)\\)/\r\nconst findAnImage = (text) => {\r\n    const mtch = text.match(REGEX)\r\n    let imageUrl = null\r\n\r\n    if(mtch !== null){\r\n        try {\r\n            imageUrl = mtch[1]\r\n        } catch(error){\r\n            return null\r\n        }\r\n    }\r\n\r\n    return imageUrl\r\n}\r\n\r\nconst dateFormatter = (create_date) => {\r\n    const date = new Date()\r\n    date.setTime(create_date)\r\n    const day = date.getUTCDate()\r\n    const mon = date.getMonth() + 1\r\n    const year = date.getFullYear()\r\n    const fdate = `${mon}/${day}/${year}`\r\n    return fdate\r\n}\r\n\r\nconst InfoCard = ({showInfo, info, handleClick}) => {\r\n\r\n    const classes = infoStyles()\r\n    const image = findAnImage(info.text)\r\n\r\n    console.log(image)\r\n\r\n    return (\r\n        <Grid item xs={12} sm={6} md={3} className={classes.infoContainer} onClick={handleClick}>\r\n            <Grid container>\r\n                {image ? <img className={classes.imazo} src={image} /> : null}\r\n                <Grid item xs={12} style={{paddingTop: \"8px\"}}>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {info.title}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h6\" className={classes.info}>\r\n                        {info.author}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} style={{paddingTop: \"16px\"}}>\r\n                    <Typography variant=\"subtitle1\" className={classes.subinfo}>\r\n                        {dateFormatter(info.create_date)}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"subtitle1\" className={classes.subinfo}>\r\n                        {info.about_author}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nconst Detailstyles = makeStyles(theme => ({\r\n    title: {\r\n        fontFamily: FONTS_HEAD,\r\n        color: theme.palette.grey[300]\r\n    },\r\n    aboutAuthor: {\r\n        fontFamily: FONTS_HEAD,\r\n        color: theme.palette.grey[400],\r\n        fontSize: \"14px\"\r\n    },\r\n    author: {\r\n        fontFamily: FONTS_HEAD,\r\n        color: theme.palette.grey[400],\r\n        fontSize: \"14px\"\r\n    },\r\n    error:{\r\n        fontFamily: FONTS_HEAD,\r\n        color: theme.palette.grey[500]\r\n    },\r\n    text: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(3),\r\n        color: theme.palette.grey[100]\r\n    },\r\n    meta_info_container: {\r\n        border: `1px solid ${theme.palette.grey[700]}`,\r\n        backgroundColor: theme.palette.primary.dark,\r\n        padding: theme.spacing(2),\r\n        borderRadius: \"0px\"\r\n    }\r\n}))\r\n\r\n\r\nconst DetailsRenderer = ({showing, info, handleClose}) => {\r\n\r\n    const classes = Detailstyles()\r\n\r\n    return (\r\n        <Dialog fullScreen open={showing} TransitionComponent={Transition} onClose={() => handleClose()}>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <IconButton onClick={() => handleClose()}>\r\n                        <Icon>close</Icon>\r\n                    </IconButton>\r\n                    <Typography className={classes.title} style={{paddingLeft: \"8px\"}}>{info ? info.title : 'Not Found'}</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container>\r\n                {\r\n                    info ?\r\n                    <Grid container style={{paddingTop: \"84px\"}}>\r\n                        <Grid item xs={12} className={classes.meta_info_container}>\r\n                            <Typography className={classes.aboutAuthor}>Created On: {dateFormatter(info.create_date)}</Typography>\r\n                            <Typography className={classes.author}>Author: {info.author}</Typography>\r\n                            <Typography className={classes.aboutAuthor}>About Author: {info.about_author}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} className={`react-article-source ${classes.text}`}>\r\n                            <ReactMarkdown source={info.text} />\r\n                        </Grid>\r\n                    </Grid> :\r\n                    <Grid container style={{paddingTop: \"84px\"}}>\r\n                        <Grid item xs={12} style={{textAlign: \"center\"}}>\r\n                            <Typography className={classes.error} variant=\"h5\">\r\n                                \\_[^_^]_/<br /> <br />\r\n                                ERROR\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n            </Container>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n\r\nconst LIMIT = 12\r\nconst STEPPER = 4\r\n\r\nconst DisplayStyle = makeStyles(theme => ({\r\n    notFound: {\r\n        color: theme.palette.grey[600],\r\n        paddingTop: theme.spacing(5),\r\n        paddingBottom: theme.spacing(5)\r\n    },\r\n    loading_display: {\r\n        fontFamily: FONTS_HEAD,\r\n        fontSize: '16px',\r\n        color: theme.palette.grey[400]\r\n    }\r\n}))\r\n\r\nexport const ArticleDisplayer = ({queryObject, shouldDisplayInfo}) => {\r\n\r\n    const classes = DisplayStyle()\r\n    const [hasMore, setHasMore] = useState(true)\r\n\r\n    const {data, error, loading, fetchMore} = useQuery(queryObject.query_query, {\r\n        variables: {\r\n            options: {\r\n                skip: 0,\r\n                limit: LIMIT,\r\n                type: queryObject.query_params\r\n\r\n            }\r\n        }\r\n    })\r\n    const {setLoading} = usePageLoadingContext()\r\n    const [showingDetails, setShowingDetails] = useState(-1)\r\n\r\n    useEffect(() => {\r\n        if(loading === true) {\r\n            setLoading(true)\r\n        } else if(loading === false) {\r\n            setLoading(false)\r\n            if(data[queryObject.query_tablename].length < LIMIT){\r\n                setHasMore(false)\r\n            }\r\n        }\r\n    }, [loading])\r\n\r\n    let ToRender\r\n    const makeResponse = () => {\r\n        const items = data[queryObject.query_tablename].map((item, index) => {\r\n            return (\r\n                <InfoCard showInfo={shouldDisplayInfo} info={item} key={index} handleClick={() => setShowingDetails(index)}/>\r\n            )\r\n        })\r\n        const result = []\r\n        for(let i = 0; i < data[queryObject.query_tablename].length; i+=STEPPER){\r\n            const ti = []\r\n            for(let j = 0; j < STEPPER && (i + j) < data[queryObject.query_tablename].length; ++j){\r\n                ti.push(items[i+j])\r\n            }\r\n            result.push(<Grid container>{ti}</Grid>)\r\n        }\r\n        \r\n        return result\r\n    }\r\n\r\n    if(loading) {\r\n        ToRender = (\r\n            <Grid container className={classes.notFound}>\r\n                <Grid item xs={12} style={{textAlign: \"center\"}}>\r\n                    <Typography variant=\"h4\">Loading...</Typography>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n    else if(error) {\r\n        ToRender = <div>Error</div>\r\n    }\r\n    else if(data) {\r\n        const response = makeResponse()\r\n\r\n        console.log(response)\r\n        if(response.length === 0){\r\n            ToRender = (\r\n                <>\r\n                <Grid container className={classes.notFound}>\r\n                    <Grid item xs={12} style={{textAlign: \"center\"}}>\r\n                        <Typography variant=\"h4\">\r\n                            -\\_(^_^)_/- <br /><br />\r\n                            Nothing Found\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                </>\r\n            )\r\n        } else {\r\n            ToRender = (\r\n                <>\r\n                    <InfiniteScroll\r\n                        dataLength={response.length}\r\n                        loader={<Grid container>\r\n                            <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                                <Typography className={classes.loading_display}>Loading</Typography>\r\n                            </Grid>\r\n                        </Grid>}\r\n                        endMessage={<></>}\r\n                        hasMore={hasMore}\r\n                        next={() => fetchMore({\r\n                            variables: {\r\n                                options: {\r\n                                    skip: (data.length / LIMIT),\r\n                                    limit: LIMIT,\r\n                                    type: queryObject.query_params\r\n                                }\r\n                            }, updateQuery: (prev, { fetchMoreResult }) => {\r\n                                if (!fetchMoreResult || !hasMore) return prev;\r\n                                if(fetchMoreResult[queryObject.query_tablename].length < LIMIT) {\r\n                                    setHasMore(false)\r\n                                }\r\n                                return {\r\n                                    [queryObject.query_tablename]: [\r\n                                        ...prev[queryObject.query_tablename],\r\n                                        ...fetchMoreResult[queryObject.query_tablename]\r\n                                    ]\r\n                                }\r\n                            }\r\n                        })}>\r\n                        {response}\r\n                    </InfiniteScroll>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {ToRender}\r\n            <DetailsRenderer showing={showingDetails >= 0} info={showingDetails >= 0 ? data[queryObject.query_tablename][showingDetails] : null} handleClose={() => setShowingDetails(-1)}/>\r\n        </>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport {FONTS_HEAD} from 'App'\r\nimport gql from 'graphql-tag'\r\nimport { usePageLoadingContext } from 'context'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport { Grid, makeStyles, Typography } from '@material-ui/core'\r\nimport { ArticleDisplayer } from 'components/ArticleDisplayer'\r\n\r\nconst ISIS_QUERY = gql`\r\nquery allEnigma($options: InpOptions) {\r\n    allArticles(options: $options) {\r\n        _id\r\n        text\r\n        title\r\n        author\r\n        about_author\r\n        create_date\r\n    }\r\n}`\r\n\r\nconst ISIS = () => {\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <ArticleDisplayer \r\n                    queryObject={{\r\n                        query_query: ISIS_QUERY,\r\n                        query_tablename: \"allArticles\",\r\n                        query_params: \"isis\"\r\n                    }}/>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ISIS "],"sourceRoot":""}