{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","../node_modules/@material-ui/core/esm/Chip/Chip.js","components/TabsList.js","../node_modules/@material-ui/core/esm/SvgIcon/SvgIcon.js","../node_modules/@material-ui/core/esm/internal/svg-icons/createSvgIcon.js","components/NotifStylesDisplayer.js","components/Notifications/Notifications.js"],"names":["createSvgIcon","createElement","d","forwardRef","props","ref","avatarProp","avatar","classes","className","clickableProp","clickable","_props$color","color","_props$component","component","Component","deleteIconProp","deleteIcon","_props$disabled","disabled","iconProp","icon","label","onClick","onDelete","onKeyDown","onKeyUp","_props$size","size","_props$variant","variant","other","chipRef","useRef","handleRef","useForkRef","handleDeleteIconClick","event","stopPropagation","small","customClasses","concat","capitalize","deleteIconSmall","isValidElement","cloneElement","Cancel","avatarSmall","iconSmall","role","undefined","root","outlined","primary","outlinedPrimary","secondary","outlinedSecondary","sizeSmall","deletable","tabIndex","currentTarget","target","indexOf","key","preventDefault","current","blur","labelSmall","withStyles","theme","backgroundColor","palette","type","grey","deleteIconColor","text","fontFamily","typography","fontSize","pxToRem","display","alignItems","justifyContent","height","getContrastText","borderRadius","whiteSpace","transition","transitions","create","cursor","outline","textDecoration","border","padding","verticalAlign","boxSizing","opacity","pointerEvents","colorPrimary","main","contrastText","colorSecondary","WebkitTapHighlightColor","boxShadow","shadows","clickableColorPrimary","clickableColorSecondary","deletableColorPrimary","deletableColorSecondary","action","hoverOpacity","marginLeft","marginRight","width","avatarColorPrimary","dark","avatarColorSecondary","iconColorPrimary","iconColorSecondary","paddingLeft","paddingRight","userSelect","margin","deleteIconColorPrimary","deleteIconColorSecondary","deleteIconOutlinedColorPrimary","deleteIconOutlinedColorSecondary","name","useStyles","makeStyles","FONTS_HEAD","spacing","fontWeight","Tab","isActive","onChange","Tabs","tabList","currentTab","Grid","style","paddingBottom","map","item","index","children","_props$fontSize","htmlColor","titleAccess","_props$viewBox","viewBox","focusable","muiName","fill","flexShrink","duration","shorter","colorAction","active","colorError","error","colorDisabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","path","displayName","memo","GET_NOTIFICATIONS","gql","notifStyles","notif","background","marginTop","marginBottom","breakpoints","down","undisplay","notifItem","spacers","rounders","overflow","clickableLink","light","notFound","paddingTop","badge","textTransform","NotifStyleDisplayer","ToRender","queryObject","displayNewBadge","useQuery","variables","options","skip","limit","query_params","data","loading","fetchMore","setLoading","usePageLoadingContext","useState","hasMore","setHasMore","useEffect","allNotifications","length","container","xs","textAlign","dataLength","endMessage","next","updateQuery","prev","fetchMoreResult","console","log","date","Date","setTime","create_date","day","getUTCDate","mon","getMonth","year","getFullYear","fdate","md","lg","N","isLessThanNDays","notification_text","notification_url","rel","href","Notifications"],"mappings":"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","file":"static/js/7.6b2c163c.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, fade } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport '../Avatar'; // So we don't have any override priority issue.\n\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = fade(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      WebkitTapHighlightColor: 'transparent',\n      // Remove grey highlight\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1],\n        backgroundColor: emphasize(backgroundColor, 0.12)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      },\n      '&:active': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.12)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      },\n      '&:active': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.12)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {\n      marginLeft: 5,\n      marginRight: -6,\n      width: 24,\n      height: 24,\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      fontSize: theme.typography.pxToRem(12)\n    },\n    avatarSmall: {\n      marginLeft: 4,\n      marginRight: -4,\n      width: 18,\n      height: 18,\n      fontSize: theme.typography.pxToRem(10)\n    },\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.dark\n    },\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.dark\n    },\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element`. */\n    label: {\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: 12,\n      paddingRight: 12,\n      userSelect: 'none',\n      whiteSpace: 'nowrap',\n      cursor: 'inherit'\n    },\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      // Remove grey highlight\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: fade(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: fade(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: fade(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: fade(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: fade(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\nvar Chip = React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Ignore events from children of `Chip`.\n\n\n    if (event.currentTarget !== event.target) {\n      return;\n    }\n\n    if ([' ', 'Enter', 'Backspace', 'Delete', 'Escape'].indexOf(event.key) !== -1) {\n      event.preventDefault();\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Ignore events from children of `Chip`.\n\n\n    if (event.currentTarget !== event.target) {\n      return;\n    }\n\n    var key = event.key;\n\n    if (onClick && (key === ' ' || key === 'Enter')) {\n      onClick(event);\n    } else if (onDelete && (key === 'Backspace' || key === 'Delete')) {\n      onDelete(event);\n    } else if (key === 'Escape' && chipRef.current) {\n      chipRef.current.blur();\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && React.isValidElement(deleteIconProp) ? React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && React.isValidElement(avatarProp)) {\n    avatar = React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && React.isValidElement(iconProp)) {\n    icon = React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: the Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      primary: classes.outlinedPrimary,\n      secondary: classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, other), avatar || icon, React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes = {\n  /**\n   * Avatar element.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If true, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If false, the chip will not be clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the chip should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback function fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the chip.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['default', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","import React from 'react'\r\nimport { Grid, Chip, makeStyles } from '@material-ui/core'\r\nimport { FONTS_HEAD } from 'App'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        fontFamily: FONTS_HEAD,\r\n        marginLeft: theme.spacing(1),\r\n        fontWeight: 700\r\n    }\r\n}))\r\n\r\nconst Tab = ({text, isActive, onChange}) => {\r\n\r\n    const classes = useStyles() \r\n\r\n    return (\r\n        <Chip onClick={onChange} className={classes.root} label={text} variant={isActive ? \"default\": \"outlined\"} color={isActive ? \"secondary\" : \"default\"} />\r\n    )\r\n}\r\n\r\nexport const Tabs = ({tabList, currentTab, onChange}) => {\r\n    return (\r\n        <Grid style={{paddingBottom: \"24px\"}}>\r\n            {\r\n                tabList.map((item, index) => {\r\n                    return (\r\n                        <Tab key={index} text={item} isActive={currentTab === index} onChange={() => onChange(index)}/>\r\n                    )\r\n                })\r\n            }\r\n        </Grid>\r\n    )\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      width: '1em',\n      height: '1em',\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0,\n      fontSize: theme.typography.pxToRem(24),\n      transition: theme.transitions.create('fill', {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(35)\n    }\n  };\n};\nvar SvgIcon = React.forwardRef(function SvgIcon(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'svg' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize,\n      htmlColor = props.htmlColor,\n      titleAccess = props.titleAccess,\n      _props$viewBox = props.viewBox,\n      viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? 'false' : 'true',\n    role: titleAccess ? 'img' : 'presentation',\n    ref: ref\n  }, other), children, titleAccess ? React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   */\n  color: PropTypes.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['default', 'inherit', 'large', 'small']),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this property.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default withStyles(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../../SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({}, props, {\n      ref: ref\n    }), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import React, { useState, lazy, useEffect } from 'react'\r\nimport { Tabs } from 'components/TabsList'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\nimport { usePageLoadingContext } from 'context'\r\nimport { makeStyles, Grid, Typography, Link, Icon, Badge } from '@material-ui/core'\r\nimport { FONTS_HEAD } from 'App'\r\nimport { fontSize } from '@material-ui/system'\r\n\r\n\r\nconst GET_NOTIFICATIONS = gql`\r\nquery AllNotifications($options: InpOptions) {\r\n    allNotifications(options: $options){\r\n        _id\r\n        notification_text\r\n        notification_url\r\n        create_date\r\n    }\r\n}\r\n`\r\n\r\nconst notifStyles = makeStyles(theme => ({\r\n    notif: {\r\n        padding: theme.spacing(1),\r\n        background: theme.palette.primary.dark,\r\n        marginTop: '1px',\r\n        marginBottom: '1px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginTop: '4px',\r\n            marginBottom: '4px'\r\n        }\r\n    },\r\n    undisplay: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    notifItem: {\r\n        padding: theme.spacing(1),\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: 0\r\n        }\r\n    },\r\n    spacers: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    rounders: {\r\n        borderRadius: theme.spacing(1),\r\n        overflow: \"hidden\"\r\n    },\r\n    clickableLink: {\r\n        fontFamily: FONTS_HEAD,\r\n        color: theme.palette.secondary.main,\r\n        '&:hover': {\r\n            color: theme.palette.secondary.light\r\n        }\r\n    },\r\n    notFound: {\r\n        color: theme.palette.grey[600],\r\n        paddingTop: theme.spacing(5),\r\n        paddingBottom: theme.spacing(5)\r\n    },\r\n    badge: {\r\n        backgroundColor: theme.palette.secondary.dark,\r\n        borderRadius: theme.spacing(4),\r\n        paddingLeft: theme.spacing(1),\r\n        paddingRight: theme.spacing(1),\r\n        color: theme.palette.primary.light,\r\n        fontSize: \"14px\",\r\n        textTransform: \"uppercase\",\r\n        marginRight: theme.spacing(0.2)\r\n    }\r\n}))\r\n\r\nconst isLessThanNDays = (date, N) => {\r\n    const currentTime = new Date()\r\n    const diff = currentTime - date\r\n    return ((diff / (1000 * 60 * 60 * 24)) <= N)\r\n}\r\n\r\nexport const NotifStyleDisplayer = ({queryObject, displayNewBadge}) => {\r\n\r\n    const classes = notifStyles()\r\n\r\n    const LIMIT = 20\r\n\r\n    const {data, loading, error, fetchMore} = useQuery(GET_NOTIFICATIONS,{\r\n        variables: {\r\n            options: {\r\n                skip: 0,\r\n                limit: LIMIT,\r\n                type: queryObject.query_params\r\n            }\r\n        }\r\n    })\r\n\r\n    const {setLoading} = usePageLoadingContext()\r\n    const [hasMore, setHasMore] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        if(loading === true){\r\n            setLoading(true)\r\n        } else {\r\n            setLoading(false)\r\n            if(data.allNotifications.length < LIMIT) {\r\n                setHasMore(false)\r\n            }\r\n        }\r\n    }, [loading])\r\n    \r\n    let ToRender\r\n    if(loading){\r\n        ToRender = (\r\n            <Grid container>\r\n                <Grid item xs={12}>                    \r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    else if(data) {\r\n        if(data.allNotifications.length < 1){\r\n            ToRender = (<>\r\n                <Grid container className={classes.notFound}>\r\n                    <Grid item xs={12} style={{textAlign: \"center\"}}>\r\n                        <Typography variant=\"h4\">\r\n                            -\\_(^_^)_/- <br /><br />\r\n                            Nothing Found\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                </>)\r\n        } else {\r\n            ToRender = (\r\n                <InfiniteScroll\r\n                    dataLength={data.allNotifications.length}\r\n                    endMessage={<></>}\r\n                    hasMore={hasMore}\r\n                    next={() => fetchMore({\r\n                        variables: {\r\n                            options: {\r\n                                skip: (data.allNotifications.length % LIMIT),\r\n                                limit: LIMIT,\r\n                                type: queryObject.query_params\r\n                            }\r\n                        },\r\n                        updateQuery: (prev, { fetchMoreResult }) => {\r\n                            if (!fetchMoreResult || !hasMore) return prev;\r\n                            console.log(prev)\r\n                            console.log(fetchMoreResult)\r\n                            if(fetchMoreResult.allNotifications.length < LIMIT) {\r\n                                setHasMore(false)\r\n                            }\r\n                            return {\r\n                                allNotifications: [\r\n                                    ...prev.allNotifications,\r\n                                    ...fetchMoreResult.allNotifications\r\n                                ]\r\n                            }\r\n                        }\r\n                    })}>\r\n                { \r\n                    data.allNotifications.map((item, index) => {\r\n\r\n                        const date = new Date()\r\n                        date.setTime(item.create_date)\r\n                        const day = date.getUTCDate()\r\n                        const mon = date.getMonth() + 1\r\n                        const year = date.getFullYear()\r\n                        const fdate = `${mon}/${day}/${year}`\r\n\r\n                        return (\r\n                            <Grid container className={`${classes.notif} ${classes.rounders}`} xs={12}>\r\n                                <Grid item className={`${classes.notifItem} ${classes.undisplay}`} xs={12} md={1} lg={1}>\r\n                                    {index + 1}\r\n                                </Grid>\r\n                                <Grid item className={classes.notifItem} xs={12} md={8} lg={9}>\r\n                                    {\r\n                                        displayNewBadge && isLessThanNDays(date, 7) ? \r\n                                        <Typography display=\"inline\" className={`${classes.badge}`}>New</Typography> : \r\n                                        <></>\r\n                                    }\r\n                                    {item.notification_text}\r\n                                </Grid>\r\n                                <Grid item className={classes.notifItem} style={{textAlign: 'left'}} xs={12} md={2} lg={1}>{fdate}</Grid>\r\n                                {\r\n                                    (typeof(item.notification_url) === 'undefined' || item.notification_url === null || item.notification_url.length === 0) ? <></> :\r\n                                    <Grid item className={classes.notifItem} xs={12} md={1} lg={1}><Link target=\"_blank\" rel=\"noreferrer noopener\" className={classes.clickableLink} href={item.notification_url}><Icon>launch</Icon></Link></Grid>\r\n                                }\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n                </InfiniteScroll>\r\n            )\r\n        }\r\n    } else if(error) {\r\n        ToRender = <div>Error Loading..</div>\r\n    }\r\n\r\n    return (\r\n        <Grid container className={classes.spacers}>\r\n            <Grid item xs={12} >\r\n            {ToRender}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import React, { useState, lazy, useEffect } from 'react'\r\nimport { Tabs } from 'components/TabsList'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\nimport { usePageLoadingContext } from 'context'\r\nimport { makeStyles, Grid, Typography, Link } from '@material-ui/core'\r\nimport { FONTS_HEAD } from 'App'\r\nimport { Footer } from 'components/Footer/Footer'\r\nimport { NotifStyleDisplayer } from 'components/NotifStylesDisplayer'\r\n\r\n\r\nconst GET_NOTIFICATIONS = gql`\r\nquery AllNotifications($options: InpOptions) {\r\n    allNotifications(options: $options){\r\n        _id\r\n        notification_text\r\n        notification_url\r\n        create_date\r\n    }\r\n}\r\n`\r\n\r\nconst notifStyles = makeStyles(theme => ({\r\n    notif: {\r\n        padding: theme.spacing(1),\r\n        background: theme.palette.primary.dark,\r\n        marginTop: '1px',\r\n        marginBottom: '1px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginTop: '4px',\r\n            marginBottom: '4px'\r\n        }\r\n    },\r\n    undisplay: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    notifItem: {\r\n        padding: theme.spacing(1),\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: 0\r\n        }\r\n    },\r\n    spacers: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    rounders: {\r\n        borderRadius: theme.spacing(1),\r\n        overflow: \"hidden\"\r\n    },\r\n    clickableLink: {\r\n        fontFamily: FONTS_HEAD,\r\n        color: theme.palette.secondary.main,\r\n        '&:hover': {\r\n            color: theme.palette.secondary.light\r\n        }\r\n    },\r\n    notFound: {\r\n        color: theme.palette.grey[600],\r\n        paddingTop: theme.spacing(5),\r\n        paddingBottom: theme.spacing(5)\r\n    },\r\n}))\r\n\r\n// const NotifStyleDisplayer = ({queryObject}) => {\r\n\r\n//     const classes = notifStyles()\r\n    \r\n//     const {data, loading, error, fetchMore} = useQuery(GET_NOTIFICATIONS,{\r\n//         variables: {\r\n//             options: {\r\n//                 skip: 0,\r\n//                 limit: LIMIT,\r\n//                 type: queryObject.query_params\r\n//             }\r\n//         }\r\n//     })\r\n\r\n//     const {setLoading} = usePageLoadingContext()\r\n//     const [hasMore, setHasMore] = useState(true)\r\n\r\n//     const LIMIT = 20\r\n\r\n//     useEffect(() => {\r\n//         if(loading === true){\r\n//             setLoading(true)\r\n//         } else {\r\n//             setLoading(false)\r\n//             if(data.allNotifications.length < LIMIT) {\r\n//                 setHasMore(false)\r\n//             }\r\n//         }\r\n//     }, [loading])\r\n    \r\n//     let ToRender\r\n//     if(loading){\r\n//         ToRender = (\r\n//             <Grid container>\r\n//                 <Grid item xs={12}>                    \r\n//                 </Grid>\r\n//             </Grid>\r\n//         )\r\n//     }\r\n\r\n//     else if(data) {\r\n//         if(data.allNotifications.length < 1){\r\n//             ToRender = (<>\r\n//                 <Grid container className={classes.notFound}>\r\n//                     <Grid item xs={12} style={{textAlign: \"center\"}}>\r\n//                         <Typography variant=\"h4\">\r\n//                             -\\_(^_^)_/- <br /><br />\r\n//                             Nothing Found\r\n//                         </Typography>\r\n//                     </Grid>\r\n//                 </Grid>\r\n//                 </>)\r\n//         } else {\r\n//             ToRender = (\r\n//                 <InfiniteScroll\r\n//                     dataLength={data.allNotifications.length}\r\n//                     endMessage={<></>}\r\n//                     hasMore={hasMore}\r\n//                     next={() => fetchMore({\r\n//                         variables: {\r\n//                             options: {\r\n//                                 skip: (data.allNotifications.length % LIMIT),\r\n//                                 limit: LIMIT,\r\n//                                 type: queryObject.query_params\r\n//                             }\r\n//                         },\r\n//                         updateQuery: (prev, { fetchMoreResult }) => {\r\n//                             if (!fetchMoreResult || !hasMore) return prev;\r\n//                             console.log(prev)\r\n//                             console.log(fetchMoreResult)\r\n//                             if(fetchMoreResult.allNotifications.length < LIMIT) {\r\n//                                 setHasMore(false)\r\n//                             }\r\n//                             return {\r\n//                                 allNotifications: [\r\n//                                     ...prev.allNotifications,\r\n//                                     ...fetchMoreResult.allNotifications\r\n//                                 ]\r\n//                             }\r\n//                         }\r\n//                     })}>\r\n//                 { \r\n//                     data.allNotifications.map((item, index) => {\r\n\r\n//                         const date = new Date()\r\n//                         date.setTime(item.create_date)\r\n//                         const day = date.getUTCDate()\r\n//                         const mon = date.getMonth() + 1\r\n//                         const year = date.getFullYear()\r\n//                         const fdate = `${mon}/${day}/${year}`\r\n\r\n//                         return (\r\n//                             <Grid container className={`${classes.notif} ${classes.rounders}`} xs={12}>\r\n//                                 <Grid item className={`${classes.notifItem} ${classes.undisplay}`} xs={12} md={1} lg={1}>{index+1}</Grid>\r\n//                                 <Grid item className={classes.notifItem} xs={12} md={8} lg={9}>{item.notification_text}</Grid>\r\n//                                 <Grid item className={classes.notifItem} style={{textAlign: 'left'}} xs={12} md={2} lg={1}>{fdate}</Grid>\r\n//                                 <Grid item className={classes.notifItem} xs={12} md={1} lg={1}><Link target=\"_blank\" rel=\"noreferrer noopener\" className={classes.clickableLink} href={item.notification_url}>More</Link></Grid>\r\n//                             </Grid>\r\n//                         )\r\n//                     })\r\n//                 }\r\n//                 </InfiniteScroll>\r\n//             )\r\n//         }\r\n//     } else if(error) {\r\n//         ToRender = <div>Error Loading..</div>\r\n//     }\r\n\r\n//     return (\r\n//         <Grid container className={classes.spacers}>\r\n//             <Grid item xs={12} >\r\n//             {ToRender}\r\n//             </Grid>\r\n//         </Grid>\r\n//     )\r\n// }\r\n\r\nconst useStyles = makeStyles(theme => {\r\n    root: {\r\n        margin: theme.spacing(100)\r\n    }\r\n})\r\n\r\nconst Notifications = () => {\r\n\r\n    const [currentTab, setCurrentTab] = useState(0)\r\n\r\n    let ToRender\r\n    ToRender = <NotifStyleDisplayer queryObject={{query_params: \"notification\"}} displayNewBadge={true}/>\r\n\r\n    const styles = useStyles()\r\n\r\n    return (\r\n        <Grid container>\r\n            {ToRender}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Notifications    "],"sourceRoot":""}