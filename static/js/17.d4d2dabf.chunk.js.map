{"version":3,"sources":["components/Notifications/AddStudent.js"],"names":["ADD_STUDENT","gql","useStyles","makeStyles","theme","error","background","red","color","success","green","AddStudent","classes","useState","roll_no","first_name","last_name","country_code","phone_no","father_name","mother_name","formValue","setFormValue","handleChange","e","target","name","value","useMutation","addStudentDetails","sup","setLoading","usePageLoadingContext","shouldShow","setShouldShow","message","setMessage","showingMessage","setShowingMessage","useEffect","loading","handleSubmit","variables","student","container","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","className","includes","item","xs","style","textAlign","fontFamily","variant","paddingTop","paddingBottom","onSubmit","spacing","fullWidth","label","onChange","placeholder","md","onClick"],"mappings":"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","file":"static/js/17.d4d2dabf.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport 'assets/css/theme.css'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { usePageLoadingContext } from 'context'\r\nimport gql from 'graphql-tag'\r\nimport { Grid, Snackbar, TextField, Typography, Button, SnackbarContent, FormControl, FormHelperText } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport {green, red} from '@material-ui/core/colors'\r\n\r\nconst InputBox = ({label, value, onChange, name, placeholder}) => {\r\n    return (\r\n        <div className=\"row\">\r\n        <div className=\"col-12 px-0 bg-primary-light\">\r\n            <label className=\"px-2 py-0 font-head\" style={{fontSize: \"14px\"}}>{label}</label>\r\n            <div>\r\n                <input className=\"input px-2 pb-1\" style={{width: \"100%\", background: \"transparent\"}} type=\"text\" value={value} onChange={onChange} name={name} />\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ADD_STUDENT = gql`\r\nmutation AddStudent($student: InpStudent!) {\r\n    addStudent(student: $student) {\r\n        _id\r\n        roll_no\r\n        first_name\r\n        last_name\r\n        country_code\r\n        phone_no\r\n        father_name\r\n        mother_name\r\n        create_date\r\n    }\r\n}\r\n`\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    error: {\r\n        background: red[800],\r\n        color: red[200]\r\n    },\r\n    success: {\r\n        background: green[800],\r\n        color: green[200]\r\n    }\r\n}))\r\n\r\nconst AddStudent = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [formValue, setFormValue] = useState({\r\n        roll_no: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        country_code: \"\",\r\n        phone_no: \"\",\r\n        father_name: \"\",\r\n        mother_name:\"\"\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        setFormValue({\r\n            ...formValue,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    } \r\n\r\n    const [addStudentDetails, sup] = useMutation(ADD_STUDENT)\r\n    const {setLoading} = usePageLoadingContext()\r\n    const [shouldShow, setShouldShow] = useState(false)\r\n    const [message, setMessage] = useState(\"Dummy Text\")\r\n    const [showingMessage, setShowingMessage] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if(addStudentDetails && sup.loading == false && shouldShow === true){\r\n            setMessage(sup.error ? \"Error Adding Details. Make sure all the details are valid!\" : \"Added Student Details\")\r\n            setShowingMessage(true)\r\n            setLoading(false)\r\n        } \r\n    }, [sup.loading])\r\n\r\n    const handleSubmit = () => {\r\n        setShowingMessage(false)\r\n        setLoading(true)\r\n        setShouldShow(true)\r\n        addStudentDetails({\r\n            variables: {student: formValue}\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Grid container>\r\n            <Snackbar anchorOrigin={{vertical: \"top\", horizontal: \"right\"}} open={showingMessage} autoHideDuration={1000} onClose={() => setShowingMessage(false)}>\r\n                <SnackbarContent \r\n                 message={message}\r\n                 className={message.includes('Error') ? classes.error : classes.success}/>\r\n            </Snackbar>\r\n            <Grid item xs={12} style={{textAlign: \"center\", fontFamily: \"Comfortaa, sans-serif\"}}>\r\n                <Typography variant=\"h5\" style={{paddingTop: \"12px\", paddingBottom: \"12px\"}}>Student Form</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                <TextField \r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    label=\"Roll No\"\r\n                    value={formValue.roll_no}\r\n                    onChange={handleChange}\r\n                    name=\"roll_no\"\r\n                    placeholder=\"Roll No\"/>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField \r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        label=\"First Name\"\r\n                        value={formValue.first_name}\r\n                        onChange={handleChange}\r\n                        name=\"first_name\"/>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        label=\"Last Name\"\r\n                        value={formValue.last_name}\r\n                        onChange={handleChange}\r\n                        name=\"last_name\"\r\n                        placeholder=\"Last Name\"/>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                <TextField\r\n                    fullWidth \r\n                    variant='outlined'\r\n                    label=\"Country Code\"\r\n                    value={formValue.country_code}\r\n                    onChange={handleChange}\r\n                    name=\"country_code\"\r\n                    placeholder=\"Country Code\"/>\r\n                </Grid>\r\n                <Grid item xs={10} >\r\n                    <FormControl fullWidth>\r\n                    <TextField\r\n                        fullWidth\r\n                        variant=\"outlined\" \r\n                        label=\"Phone No\"\r\n                        value={formValue.phone_no}\r\n                        onChange={handleChange}\r\n                        name=\"phone_no\"\r\n                        placeholder=\"Phone No\"/>\r\n                        <FormHelperText>Phone number must be 10 digits long.</FormHelperText>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                <TextField \r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    label=\"Father's Name\"\r\n                    value={formValue.father_name}\r\n                    onChange={handleChange}\r\n                    name=\"father_name\"\r\n                    placeholder=\"Father Name\"/>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                <TextField \r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    label=\"Mother's Name\"\r\n                    value={formValue.mother_name}\r\n                    onChange={handleChange}\r\n                    name=\"mother_name\"\r\n                    placeholder=\"Mother Name\"/>\r\n                </Grid>\r\n                <Grid xs={12} style={{paddingTop: \"16px\"}}>\r\n                    <Button variant=\"contained\" onClick={() => handleSubmit()}>Submit</Button>\r\n                </Grid>\r\n                </Grid>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default AddStudent"],"sourceRoot":""}