{"version":3,"sources":["serviceWorker.js","index.js","context.js","components/Navigation/Navigation.js","routes.js","components/Footer/MapLocation.js","components/Footer/Footer.js","App.js","cconfig.js","components/NotFound.js","assets/images/igmc_menu.jpg"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","Provider","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","ACTIONS","PAGE_LOADING","loadingReducer","state","action","console","log","type","LOADING","loading","Error","usePageLoadingContext","createUseContext","useReducer","dispatch","setLoading","value","ustyles","makeStyles","theme","root","width","loaderStyles","height","dummyLoader","background","palette","primary","main","listItem","color","secondary","listItemText","fontFamily","FONTS_HEAD","nestedItem","paddingLeft","spacing","paths","Navigation","useState","open","setOpen","collapseOpen","setCollapseOpen","path","usePath","styles","AppBar","position","LinearProgress","className","Toolbar","IconButton","edge","aria-label","onClick","Icon","Typography","variant","style","startsWith","getPath","Drawer","onClose","role","List","component","aria-labelledby","subheader","ListItem","ListItemAvatar","Avatar","src","IGMCAvatar","display","ListItemText","disableTypography","Divider","map","item","index","button","key","A","href","toLowerCase","Collapse","in","timeout","disablePadding","Notifications","lazy","Home","About","Clubs","Gallery","Routes","useStyles","padder","padding","padderLoc","paddingTop","fontmain","grey","MapLocation","classes","Grid","container","xs","md","id","frameborder","scrolling","marginheight","marginwidth","textTransform","ccontainer","bottom","marginTop","paddingBottom","backgroundColor","dark","Footer","textAlign","fontSize","client","ApolloClient","uri","process","join","createMuiTheme","light","amber","typography","h1","h2","h3","h4","h5","h6","useRedirect","routesResult","useRoutes","ThemeProvider","fallback","CssBaseline","Container","NotFound","module","exports"],"mappings":"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","file":"static/js/main.2b60d8c9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {usePageLoadingContext} from 'context'\n\nReactDOM.render(\n    <usePageLoadingContext.Provider>\n        <App />\n    </usePageLoadingContext.Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {useReducer} from 'react'\r\nimport createUseContext from  'constate'\r\n\r\nconst ACTIONS = {\r\n    PAGE_LOADING: \"page-loading\"\r\n}\r\n\r\n\r\nconst initStateLoading = false\r\n\r\nconst loadingReducer = (state, action) => {\r\n    console.log(action.type)\r\n    switch(action.type) {\r\n        case ACTIONS.LOADING: \r\n            return action.loading\r\n        default:\r\n            throw new Error('Unspecified type for loading!')\r\n    }\r\n}\r\n\r\nconst usePageLoader = () => {\r\n    const [state, dispatch] = useReducer(loadingReducer, initStateLoading)\r\n    const loading = state\r\n\r\n    const setLoading = (value) => {\r\n        console.log(\"trying set loading to => \" + value)\r\n        if(loading === value) return \r\n        else {\r\n            dispatch({\r\n                type: ACTIONS.LOADING,\r\n                loading: value\r\n            })\r\n        }\r\n    }\r\n\r\n    return {loading, setLoading}\r\n}\r\n\r\nexport const usePageLoadingContext = createUseContext(usePageLoader)","import React, { useState } from 'react'\r\nimport {A, usePath} from 'hookrouter' \r\nimport 'assets/css/theme.css'\r\nimport {FONTS_HEAD, FONTS_MAIN} from 'App'\r\nimport './Navigation.css'\r\nimport { Loading } from 'components/Loading'\r\nimport { usePageLoadingContext } from 'context'\r\nimport IGMCAvatar from 'assets/images/igmc_menu.jpg'\r\nimport { AppBar, Toolbar, IconButton, Icon, Typography, Drawer, List, ListSubheader, ListItem, ListItemText, Divider, Collapse, makeStyles, LinearProgress, ListItemAvatar, Avatar } from '@material-ui/core'\r\n\r\nconst ustyles = makeStyles(theme => ({\r\n    root:{\r\n        width: 240\r\n    },\r\n    loaderStyles: {\r\n        height: 2\r\n    },\r\n    dummyLoader: {\r\n        height: 2,\r\n        width: '100%',\r\n        background: theme.palette.primary.main\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            color: theme.palette.secondary.main\r\n        }\r\n    },\r\n    listItemText: {\r\n        fontFamily: FONTS_HEAD,\r\n    },\r\n    nestedItem: {\r\n        paddingLeft: theme.spacing(4)\r\n    }\r\n}))\r\n\r\nconst paths = {\r\n    '/home': \"Home\",\r\n    '/notifications': \"Notifications\",\r\n    '/gallery': 'Gallery',\r\n    '/about': \"About IGMC\"\r\n}\r\n\r\nconst MenuItem = ({text, link}) => {\r\n    return <A href={link} className=\"col-12 small font-head decoration-none py-3 text-light bg-primary-main-hover\">{text}</A>\r\n}\r\n\r\nconst getPath = (path) => {\r\n    console.log(path)\r\n    if(paths[path]){\r\n        return paths[path]\r\n    } else if(path.startsWith('/clubs')) {\r\n        return \"Clubs\"\r\n    } else {\r\n        return 'NotFound'\r\n    }\r\n}\r\n\r\nexport const Navigation = () => {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [collapseOpen, setCollapseOpen] = useState(false)\r\n    const path = usePath() \r\n    const {loading} = usePageLoadingContext()\r\n    const styles = ustyles()\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <header>\r\n        <AppBar position=\"fixed\">\r\n            {loading ? <LinearProgress className={styles.loaderStyles} color=\"secondary\" />: <div className={styles.dummyLoader}></div>}\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={() => setOpen(true)}>\r\n                    <Icon>\r\n                        menu\r\n                    </Icon>\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className=\"font-head\" style={{paddingLeft: \"8px\"}}>{getPath(path)}</Typography>\r\n            </Toolbar> \r\n        </AppBar>\r\n        <Drawer open={open} onClose={() => setOpen(false)}>\r\n            <div className={styles.root} role=\"presentation\">\r\n            <List component=\"nav\" aria-labelledby=\"menu\" subheader={\r\n                <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Avatar src={IGMCAvatar} style={{display: 'inline-block'}} /> \r\n                        </ListItemAvatar>\r\n                        <ListItemText \r\n                        disableTypography\r\n                        primary={<Typography className={styles.listItemText}>Menu</Typography>} />\r\n                </ListItem>\r\n            }>\r\n                <Divider />\r\n                {([\r\n                    'Home',\r\n                    'Gallery',\r\n                    'Notifications'\r\n                ]).map((item, index) => {\r\n                    return (\r\n                        <ListItem button key={index} className={styles.listItem} component={A} href={`/${item.toLowerCase()}`}>\r\n                            <ListItemText \r\n                                disableTypography \r\n                                primary={\r\n                                    <Typography className={styles.listItemText}>{item}</Typography>\r\n                                }/>\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n                <ListItem className={styles.listItem} button onClick={() => setCollapseOpen(!collapseOpen)}>\r\n                    <ListItemText \r\n                        disableTypography \r\n                        primary={\r\n                            <Typography className={styles.listItemText}>Clubs</Typography>\r\n                        }/>\r\n                    <Icon>\r\n                        {\r\n                            collapseOpen ? \r\n                            'expand_less':\r\n                            'expand_more'          \r\n                        }\r\n                    </Icon>\r\n                </ListItem>\r\n                <Collapse in={collapseOpen} timeout={'auto'}>\r\n                    <List component=\"div\" disablePadding>\r\n                    {([\r\n                        'Enigma',\r\n                        'ISIS',\r\n                        'Memers',\r\n                        'Arts'\r\n                    ]).map((item, index) => {\r\n                        return (\r\n                            <ListItem className={`${styles.listItem} ${styles.nestedItem}`} button key={index} component={A} href={`/clubs/${item.toLowerCase()}`}>\r\n                                <ListItemText \r\n                                    disableTypography \r\n                                    primary={\r\n                                        <Typography className={styles.listItemText}>{item}</Typography>\r\n                                    }/>\r\n                            </ListItem>\r\n                        )\r\n                    })}\r\n                    </List>\r\n                </Collapse>\r\n                <ListItem button component={A} href={`/about`} className={styles.listItem}>\r\n                    <ListItemText\r\n                        disableTypography \r\n                        primary={\r\n                            <Typography className={styles.listItemText}>About Us</Typography>\r\n                        }/>\r\n                </ListItem>\r\n            </List>\r\n            </div>\r\n        </Drawer>\r\n        </header>\r\n    )\r\n}","import React, {lazy, Suspense} from 'react'\r\n\r\nconst Notifications =  lazy(() => import('components/Notifications/Notifications'))\r\nconst Home = lazy(() => import('./components/Home/Home'))\r\nconst About =  lazy(() => import('components/About/About'))\r\nconst Clubs =  lazy(() => import('components/Clubs/Clubs'))\r\nconst Gallery =  lazy(() => import('components/Gallery/Gallery'))\r\n\r\nexport const Routes = {\r\n    '/home': () => <Home />,\r\n    '/notifications': () => <Notifications />,\r\n    '/clubs*': () => <Clubs />,\r\n    '/about': () => <About />,\r\n    '/gallery': () => <Gallery />\r\n}","import React from 'react'\r\nimport {Grid, Typography} from '@material-ui/core'\r\nimport { FONTS_HEAD } from 'App'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    padder: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    padderLoc: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    fontmain: {\r\n        color: theme.palette.grey[400]\r\n    }\r\n}))\r\n\r\nexport const MapLocation = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Grid container >\r\n            <Grid item xs={12} md={6}>\r\n                <iframe style={{width: \"100%\"}} height=\"320\" id=\"gmap_canvas\" src=\"https://maps.google.com/maps?q=igmc%20shimla&t=&z=17&ie=UTF8&iwloc=&output=embed\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\" />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} style={{padding: \"8px\"}}>\r\n                <Typography className={classes.fontmain} style={{fontFamily: FONTS_HEAD, textTransform: \"uppercase\"}}>Location</Typography>\r\n                <Typography className={`${classes.fontmain} ${classes.padderLoc}`} style={{fontFamily: FONTS_HEAD}}>\r\n                    Indira Gandhi Medical College & Hospital <br />\r\n                    Ridge Sanjauli Rd, Lakkar Bazar, Shimla, Himachal Pradesh <br /> 171001\r\n                </Typography>\r\n                <br />\r\n                {/* <Typography className={classes.fontmain} style={{fontFamily: FONTS_HEAD, textTransform: \"uppercase\"}}>How to reach?</Typography>\r\n                <Typography className={`${classes.fontmain} ${classes.padderLoc}`} style={{fontFamily: FONTS_HEAD}}>\r\n                    Indira Gandhi Medical College & Hospital <br />\r\n                    Ridge Sanjauli Rd, Lakkar Bazar, Shimla, Himachal Pradesh <br /> 171001\r\n                </Typography> */}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import React from 'react'\r\nimport {usePath} from 'hookrouter'\r\nimport { Grid, Typography, makeStyles, Link } from '@material-ui/core'\r\nimport { FONTS_HEAD } from 'App'\r\nimport { MapLocation } from './MapLocation'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    fontmain: {\r\n        fontFamily: FONTS_HEAD,\r\n        color: theme.palette.grey[500]\r\n    },\r\n    padder: {\r\n        paddingTop: theme.spacing(4),\r\n    },\r\n    ccontainer: {\r\n        position: \"relative\",\r\n        bottom: \"0\",\r\n        marginTop: theme.spacing(4),\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n        backgroundColor: theme.palette.primary.dark\r\n    }\r\n})) \r\n\r\nexport const Footer = () => {\r\n\r\n    const classes = useStyles()\r\n    const path = usePath()\r\n\r\n    return (\r\n        <Grid container className={classes.ccontainer}>\r\n            {\r\n                path === '/home' ?\r\n                <Grid item xs={12}>\r\n                    <MapLocation />\r\n                </Grid> :\r\n                null\r\n            }\r\n            <Grid item className={ path === '/home' ? classes.padder : \"\"} xs={12} style={{textAlign: \"center\"}}>\r\n                <Typography variant='body1' className={classes.fontmain} style={{textAlign: 'center', fontSize: \"12px\"}} >CopyRight &copy; 2019 CSAIGMC. All rights reserved.</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import React, { Suspense, Fragment, useState } from 'react';\nimport 'assets/css/theme.css'\nimport {useRedirect, useRoutes} from 'hookrouter'\nimport { Navigation } from 'components/Navigation/Navigation';\nimport ApolloClient from 'apollo-boost';\nimport {ApolloProvider} from '@apollo/react-hooks'\nimport { BASE_URL } from 'cconfig';\nimport { Routes } from 'routes';\nimport { NotFound } from 'components/NotFound';\nimport {CssBaseline} from '@material-ui/core'\nimport Container from '@material-ui/core/Container'\nimport {createMuiTheme, makeStyles} from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles';\nimport {amber, grey} from '@material-ui/core/colors'\nimport { Footer } from 'components/Footer/Footer';\n\n\nconst client = new ApolloClient({\n  uri: [BASE_URL, 'graphql'].join('/') \n})\n\nexport const FONTS_HEAD = ['Comfortaa', 'roboto', 'cursive'].join(',')\nexport const FONTS_MAIN = ['Roboto', 'sans-serif'].join(',')\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      light: grey[600],\n      main: grey[800],\n      dark: grey[900]\n    },\n    secondary: amber\n  },\n  typography: {\n    h1: { fontFamily: FONTS_HEAD},\n    h2: { fontFamily: FONTS_HEAD},\n    h3: { fontFamily: FONTS_HEAD},\n    h4: { fontFamily: FONTS_HEAD},\n    h5: { fontFamily: FONTS_HEAD},\n    h6: { fontFamily: FONTS_HEAD},\n    button: { fontFamily: FONTS_HEAD},\n  }\n})\n\nconst useStyles = makeStyles(theme => {\n  root: {\n    paddingTop: theme.spacing(10)\n  }\n})\n\nconst App = () => {\n\n  const styles = useStyles()\n\n  useRedirect('/', '/home')\n  const routesResult = useRoutes(Routes)\n\n  return (\n    <ThemeProvider theme={theme}>\n    <ApolloProvider client={client}>\n      <Fragment>\n        <Navigation />\n        <Suspense fallback={\n          <div>\n            Loading...\n          </div>\n        }>\n          <CssBaseline />\n          <Container style={{paddingTop: \"84px\"}}>\n            {routesResult || <NotFound />}\n          </Container>\n        </Suspense>\n        <Footer />\n      </Fragment>\n    </ApolloProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","export const BASE_URL=process.env.REACT_APP_PROD_BASE_URL\r\n","import React from 'react'\r\nimport 'assets/css/theme.css'\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <div className=\"container font-head\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 text-center\">\r\n                    <h1>404 ;(</h1><br />\r\n                    Not Found\r\n                </div>\r\n                <div className=\"col-12 small text-center pt-4\">\r\n                        The resource you are looking for cannot be found.\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","module.exports = __webpack_public_path__ + \"static/media/igmc_menu.e30c3f6f.jpg\";"],"sourceRoot":""}