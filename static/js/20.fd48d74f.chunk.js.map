{"version":3,"sources":["components/Complaints/AddComplaints.js"],"names":["ADD_COMPLAINT","gql","useStyles","makeStyles","theme","error","background","red","color","success","green","AddComplaint","classes","useState","complaint_message","formValue","setFormValue","useMutation","addComplaintDetails","sup","setLoading","usePageLoadingContext","shouldShow","setShouldShow","message","setMessage","showingMessage","setShowingMessage","console","log","useEffect","loading","data","addComplaint","_id","handleSubmit","variables","complaint","complaint_status","container","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","className","includes","item","xs","style","textAlign","fontFamily","variant","paddingTop","paddingBottom","onSubmit","spacing","fullWidth","multiline","label","value","onChange","e","target","name","placeholder","onClick"],"mappings":"0kCASA,IAaMA,EAAgBC,IAAH,KAUbC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,MAAO,CACHC,WAAYC,IAAI,KAChBC,MAAOD,IAAI,MAEfE,QAAS,CACLH,WAAYI,IAAM,KAClBF,MAAOE,IAAM,UAkFNC,UA9EM,WAEjB,IAAMC,EAAUV,IAFO,EAIWW,mBAAS,CACvCC,kBAAmB,KALA,mBAIhBC,EAJgB,KAILC,EAJK,OAeYC,YAAYjB,GAfxB,mBAehBkB,EAfgB,KAeKC,EAfL,KAgBhBC,EAAcC,cAAdD,WAhBgB,EAiBaP,oBAAS,GAjBtB,mBAiBhBS,EAjBgB,KAiBJC,EAjBI,OAkBOV,mBAAS,cAlBhB,mBAkBhBW,EAlBgB,KAkBPC,EAlBO,OAmBqBZ,oBAAS,GAnB9B,mBAmBhBa,EAnBgB,KAmBAC,EAnBA,KAqBvBC,QAAQC,IAAI,QACZD,QAAQC,IAAIV,GACZS,QAAQC,IAAI,QAEZC,qBAAU,WACHZ,GAAsC,GAAfC,EAAIY,UAAmC,IAAfT,IAC9CG,EAAWN,EAAId,MAAQ,0BAAZ,4BAA6Dc,EAAIa,KAAKC,aAAaC,IAAnF,wDACXP,GAAkB,GAClBP,GAAW,MAEhB,CAACD,EAAIY,UAER,IAAMI,EAAe,WACjBR,GAAkB,GAClBP,GAAW,GACXG,GAAc,GACdL,EAAoB,CAChBkB,UAAW,CAACC,UAAU,EAAD,GAAMtB,EAAN,CAAiBuB,iBAAkB,gBAIhE,OACI,kBAAC,IAAD,CAAMC,WAAS,GACX,kBAAC,IAAD,CAAUC,aAAc,CAACC,SAAU,MAAOC,WAAY,SAAUC,KAAMjB,EAAgBkB,iBAAkB,IAAOC,QAAS,kBAAMlB,GAAkB,KAC5I,kBAAC,IAAD,CACCH,QAASA,EACTsB,UAAWtB,EAAQuB,SAAS,SAAWnC,EAAQP,MAAQO,EAAQH,WAEpE,kBAAC,IAAD,CAAMuC,MAAI,EAACC,GAAI,GAAIC,MAAO,CAACC,UAAW,SAAUC,WAAY,0BACxD,kBAAC,IAAD,CAAYC,QAAQ,KAAKH,MAAO,CAACI,WAAY,OAAQC,cAAe,SAApE,mBAIJ,kBAAC,IAAD,CAAMP,MAAI,EAACC,GAAI,IACf,0BAAMO,SAAUrB,GAChB,kBAAC,IAAD,CAAMI,WAAS,EAACkB,QAAS,GACrB,kBAAC,IAAD,CAAMT,MAAI,EAACC,GAAI,IACf,kBAAC,IAAD,CACIS,WAAS,EACTC,WAAS,EACTN,QAAQ,WACRO,MAAM,oBACNC,MAAO9C,EAAUD,kBACjBgD,SAxDK,SAACC,GAClB/C,EAAa,EAAD,GACLD,EADK,eAEPgD,EAAEC,OAAOC,KAAOF,EAAEC,OAAOH,UAsDlBI,KAAK,oBACLC,YAAY,uBAEhB,kBAAC,IAAD,CAAMjB,GAAI,GAAIC,MAAO,CAACI,WAAY,SAC9B,kBAAC,IAAD,CAAQD,QAAQ,YAAYc,QAAS,kBAAMhC,MAA3C","file":"static/js/20.fd48d74f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport 'assets/css/theme.css'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { usePageLoadingContext } from 'context'\r\nimport gql from 'graphql-tag'\r\nimport { Grid, Snackbar, TextField, Typography, Button, SnackbarContent, FormControl, FormHelperText } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport {green, red} from '@material-ui/core/colors'\r\n\r\nconst InputBox = ({label, value, onChange, name, placeholder}) => {\r\n    return (\r\n        <div className=\"row\">\r\n        <div className=\"col-12 px-0 bg-primary-light\">\r\n            <label className=\"px-2 py-0 font-head\" style={{fontSize: \"14px\"}}>{label}</label>\r\n            <div>\r\n                <input className=\"input px-2 pb-1\" style={{width: \"100%\", background: \"transparent\"}} type=\"text\" value={value} onChange={onChange} name={name} />\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ADD_COMPLAINT = gql`\r\nmutation AddComplaint($complaint: InpComplaint!) {\r\n    addComplaint(complaint: $complaint) {\r\n        _id\r\n        complaint_message\r\n        create_date\r\n    }\r\n}\r\n`\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    error: {\r\n        background: red[800],\r\n        color: red[200]\r\n    },\r\n    success: {\r\n        background: green[800],\r\n        color: green[200]\r\n    }\r\n}))\r\n\r\nconst AddComplaint = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [formValue, setFormValue] = useState({\r\n        complaint_message: \"\"\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        setFormValue({\r\n            ...formValue,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    } \r\n\r\n    const [addComplaintDetails, sup] = useMutation(ADD_COMPLAINT)\r\n    const {setLoading} = usePageLoadingContext()\r\n    const [shouldShow, setShouldShow] = useState(false)\r\n    const [message, setMessage] = useState(\"Dummy Text\")\r\n    const [showingMessage, setShowingMessage] = useState(false)\r\n\r\n    console.log(\"____\")\r\n    console.log(sup)\r\n    console.log(\"____\")\r\n\r\n    useEffect(() => {\r\n        if(addComplaintDetails && sup.loading == false && shouldShow === true){\r\n            setMessage(sup.error ? \"Error Adding Complaint.\" : `Added Complaint: #${sup.data.addComplaint._id}. Please keep it to see progress of your Complaint.`)\r\n            setShowingMessage(true)\r\n            setLoading(false)\r\n        } \r\n    }, [sup.loading])\r\n\r\n    const handleSubmit = () => {\r\n        setShowingMessage(false)\r\n        setLoading(true)\r\n        setShouldShow(true)\r\n        addComplaintDetails({\r\n            variables: {complaint: {...formValue, complaint_status: \"pending\"}}\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Grid container>\r\n            <Snackbar anchorOrigin={{vertical: \"top\", horizontal: \"right\"}} open={showingMessage} autoHideDuration={10000} onClose={() => setShowingMessage(false)}>\r\n                <SnackbarContent \r\n                 message={message}\r\n                 className={message.includes('Error') ? classes.error : classes.success}/>\r\n            </Snackbar>\r\n            <Grid item xs={12} style={{textAlign: \"center\", fontFamily: \"Comfortaa, sans-serif\"}}>\r\n                <Typography variant=\"h5\" style={{paddingTop: \"12px\", paddingBottom: \"12px\"}}>\r\n                    Complaint Form\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                <TextField \r\n                    fullWidth\r\n                    multiline\r\n                    variant=\"outlined\"\r\n                    label=\"Complaint Message\"\r\n                    value={formValue.complaint_message}\r\n                    onChange={handleChange}\r\n                    name=\"complaint_message\"\r\n                    placeholder=\"Complaint Message\"/>\r\n                </Grid>\r\n                <Grid xs={12} style={{paddingTop: \"16px\"}}>\r\n                    <Button variant=\"contained\" onClick={() => handleSubmit()}>Submit</Button>\r\n                </Grid>\r\n                </Grid>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default AddComplaint"],"sourceRoot":""}