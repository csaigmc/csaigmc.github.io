{"version":3,"sources":["serviceWorker.js","index.js","components/Navigation/Navigation.js","routes.js","components/useLocalStorage.js","cconstants.js","App.js","cconfig.js","context.js","assets/images/IGMC.png","components/Footer/MapLocation.js","components/Footer/Footer.js","components/NotFound.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","Provider","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","ustyles","makeStyles","theme","root","width","loaderStyles","height","dummyLoader","background","palette","primary","main","listItem","color","secondary","listItemText","fontFamily","FONTS_HEAD","textTransform","fontSize","fontWeight","nestedItem","paddingLeft","spacing","toolbar","boxShadow","shadows","borderBottom","grey","titlePath","marginLeft","iconContainer","padding","fIcon","paths","Navigation","currentSettings","onChangeSettings","useState","open","setOpen","collapseOpen","setCollapseOpen","path","usePath","loading","usePageLoadingContext","styles","handleClose","AppBar","position","className","LinearProgress","Toolbar","IconButton","edge","aria-label","onClick","Typography","variant","console","log","startsWith","getPath","Drawer","onClose","role","List","component","aria-labelledby","subheader","ListItem","ListItemAvatar","Avatar","src","IGMCAvatar","style","display","ListItemText","disableTypography","Divider","map","item","index","button","key","A","href","toLowerCase","split","join","Icon","Collapse","in","timeout","disablePadding","Notifications","lazy","Papers","Home","About","Clubs","Gallery","Complaints","AddStudent","Routes","useLocalStorage","ls","localStorage","getItem","defVal","v","undefined","setItem","value","availableColors","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","amber","mp","Object","keys","forEach","invertMap","client","ApolloClient","uri","process","themeConstruct","type","ccolor","createMuiTheme","light","dark","typography","textColor","useStyles","themeSettings","useRedirect","routesResult","useRoutes","ThemeProvider","fallback","CssBaseline","Container","paddingTop","NotFound","Footer","ACTIONS","PAGE_LOADING","loadingReducer","state","action","LOADING","Error","createUseContext","useReducer","dispatch","setLoading","module","exports","padder","loc","padderLoc","fontmain","MapLocation","classes","Grid","container","xs","md","id","frameborder","scrolling","marginheight","marginwidth","copyRight","marginTop","marginBottom","ccontainer","bottom","paddingBottom","backgroundColor","followus","textAlign","breakpoints","up","alignSelf","socialicon","marginRight","instagram","submit_complaint_here","cursor","imagelogo","borderRadius","down","divider","borderRight","paddingRight","logoText","verticalAlign","IGMCImage","alt","Link"],"mappings":"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","file":"static/js/main.4eea8b45.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport {usePageLoadingContext} from 'context'\r\n\r\nReactDOM.render(\r\n    <usePageLoadingContext.Provider>\r\n        <App />\r\n    </usePageLoadingContext.Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { useState } from 'react'\r\nimport {A, usePath} from 'hookrouter' \r\nimport 'assets/css/theme.css'\r\nimport {FONTS_HEAD, FONTS_MAIN} from 'App'\r\nimport './Navigation.css'\r\nimport { usePageLoadingContext } from 'context'\r\nimport IGMCAvatar from 'assets/images/IGMC.png'\r\nimport { AppBar, Toolbar, IconButton, Icon, Typography, Drawer, List, ListSubheader, ListItem, ListItemText, Divider, Collapse, makeStyles, LinearProgress, ListItemAvatar, Avatar } from '@material-ui/core'\r\n\r\nconst ustyles = makeStyles(theme => ({\r\n    root:{\r\n        width: 240\r\n    },\r\n    loaderStyles: {\r\n        height: 1.2\r\n    },\r\n    dummyLoader: {\r\n        height: 1.2,\r\n        width: '100%',\r\n        background: theme.palette.primary.main\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            color: theme.palette.secondary.main\r\n        }\r\n    },\r\n    listItemText: {\r\n        fontFamily: FONTS_HEAD,\r\n        textTransform: \"uppercase\",\r\n        fontSize: \"12px\",\r\n        fontWeight: \"500\"\r\n    },\r\n    nestedItem: {\r\n        paddingLeft: theme.spacing(4)\r\n    },\r\n    toolbar: {\r\n        boxShadow: theme.shadows[0],\r\n        borderBottom: `1px solid ${theme.palette.grey[200]}5f`\r\n    },\r\n    titlePath: {\r\n        fontSize: \"1rem\",\r\n        fontWeight: \"500\",\r\n        textTransform: \"uppercase\",\r\n        marginLeft: \"1rem\"\r\n    },\r\n    iconContainer: {\r\n        padding: \"10px 12px\"\r\n    },\r\n    fIcon: {\r\n        fontSize: '16px',\r\n    }\r\n}))\r\n\r\nconst paths = {\r\n    '/home': \"Home\",\r\n    '/notifications': \"Notifications\",\r\n    '/gallery': 'Gallery',\r\n    '/about': \"About IGMC\",\r\n    '/complaints': \"Complaints\",\r\n    '/papers&books': \"Papers & Books\",\r\n    '/addstudent': \"Add Student\"\r\n}\r\n\r\nconst getPath = (path) => {\r\n    console.log(path)\r\n    if(paths[path]){\r\n        return paths[path]\r\n    } else if(path.startsWith('/clubs')) {\r\n        return \"Clubs\"\r\n    } else {\r\n        return 'NotFound'\r\n    }\r\n}\r\n\r\nexport const Navigation = ({currentSettings, onChangeSettings}) => {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [collapseOpen, setCollapseOpen] = useState(false)\r\n    const path = usePath() \r\n    const {loading} = usePageLoadingContext()\r\n    const styles = ustyles()\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <header>\r\n        <AppBar position=\"fixed\" className={styles.toolbar}>\r\n            {loading ? <LinearProgress className={styles.loaderStyles} color=\"secondary\" />: <div className={styles.dummyLoader}></div>}\r\n            <Toolbar>\r\n                <IconButton className={styles.iconContainer} edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={() => setOpen(true)}>\r\n                    <i className={`${styles.fIcon} fas fa-bars`}></i>\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={styles.titlePath}>{getPath(path)}</Typography>\r\n            </Toolbar> \r\n        </AppBar>\r\n        <Drawer open={open} onClose={() => setOpen(false)}>\r\n            <div className={styles.root} role=\"presentation\">\r\n            <List component=\"nav\" aria-labelledby=\"menu\" subheader={\r\n                <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Avatar src={IGMCAvatar} style={{display: 'inline-block'}} /> \r\n                        </ListItemAvatar>\r\n                        <ListItemText \r\n                        disableTypography\r\n                        primary={<Typography className={styles.listItemText}>Menu</Typography>} />\r\n                </ListItem>\r\n            }>\r\n                <Divider />\r\n                {([\r\n                    'Home',\r\n                    'Gallery',\r\n                    'Notifications',\r\n                    'Complaints',\r\n                    'Papers & Books',\r\n                    'Add Student'\r\n                ]).map((item, index) => {\r\n                    return (\r\n                        <ListItem button onClick={() => handleClose()} key={index} className={styles.listItem} component={A} href={`/${item.toLowerCase().split(\" \").join(\"\")}`}>\r\n                            <ListItemText \r\n                                disableTypography \r\n                                primary={\r\n                                    <Typography variant=\"subtitle1\" className={styles.listItemText}>{item}</Typography>\r\n                                }/>\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n                <ListItem className={styles.listItem} button onClick={() => setCollapseOpen(!collapseOpen)}>\r\n                    <ListItemText \r\n                        disableTypography \r\n                        primary={\r\n                            <Typography className={styles.listItemText}>Clubs</Typography>\r\n                        }/>\r\n                    <Icon>\r\n                        {\r\n                            collapseOpen ? \r\n                            'expand_less':\r\n                            'expand_more'          \r\n                        }\r\n                    </Icon>\r\n                </ListItem>\r\n                <Collapse in={collapseOpen} timeout={'auto'}>\r\n                    <List component=\"div\" disablePadding>\r\n                    {([\r\n                        // 'Enigma',\r\n                        'ISIS',\r\n                        'Memers',\r\n                        'Arts'\r\n                    ]).map((item, index) => {\r\n                        return (\r\n                            <ListItem className={`${styles.listItem} ${styles.nestedItem}`} button onClick={() => handleClose()} key={index} component={A} href={`/clubs/${item.toLowerCase()}`}>\r\n                                <ListItemText \r\n                                    disableTypography \r\n                                    primary={\r\n                                        <Typography className={styles.listItemText}>{item}</Typography>\r\n                                    }/>\r\n                            </ListItem>\r\n                        )\r\n                    })}\r\n                    </List>\r\n                </Collapse>\r\n                <ListItem button component={A} href={`/about`} className={styles.listItem}>\r\n                    <ListItemText\r\n                        disableTypography \r\n                        primary={\r\n                            <Typography className={styles.listItemText}>About Us</Typography>\r\n                        }/>\r\n                </ListItem>\r\n            </List>\r\n            </div>\r\n        </Drawer>\r\n        </header>\r\n    )\r\n}","import React, {lazy, Suspense} from 'react'\r\n\r\nconst Notifications =  lazy(() => import('components/Notifications/Notifications'))\r\nconst Papers =  lazy(() => import('components/Papers/Papers'))\r\nconst Home = lazy(() => import('./components/Home/Home'))\r\nconst About =  lazy(() => import('components/About/About'))\r\nconst Clubs =  lazy(() => import('components/Clubs/Clubs'))\r\nconst Gallery =  lazy(() => import('components/Gallery/Gallery'))\r\nconst Complaints =  lazy(() => import('components/Complaints/Complaints'))\r\nconst AddStudent = lazy(() => import('components/Notifications/AddStudent'))\r\n\r\nexport const Routes = {\r\n    '/home': () => <Home />,\r\n    '/notifications': () => <Notifications />,\r\n    '/papers&books': () => <Papers />,\r\n    '/clubs*': () => <Clubs />,\r\n    '/about': () => <About />,\r\n    '/gallery': () => <Gallery />,\r\n    '/complaints': () => <Complaints />,\r\n    '/addstudent': () => <AddStudent />\r\n}","import {React} from 'react'\r\n\r\nlet useLocalStorage = () => {\r\n\r\n    let ls = window.localStorage\r\n\r\n    const getItem = (key, defVal) => {\r\n        let v = ls.getItem(key)\r\n        \r\n        if(v == null || v == undefined){\r\n            ls.setItem(key, defVal)\r\n            return defVal\r\n        } else {\r\n            return v\r\n        }\r\n    }\r\n\r\n    const setItem = (key, value) => {\r\n        let v = ls.setItem(key, value)\r\n    } \r\n\r\n    return {getItem, setItem}\r\n\r\n}\r\n\r\nexport default useLocalStorage","import {red, pink, purple, deepPurple, indigo, blue, lightBlue, cyan, teal, green, lightGreen, lime, amber} from '@material-ui/core/colors'\r\n\r\nconst availableColors = {\r\n    \"red\": red,\r\n    \"pink\": pink,\r\n    \"purple\": purple,\r\n    \"deepPurple\": deepPurple,\r\n    \"indigo\": indigo,\r\n    \"blue\": blue,\r\n    \"lightBlue\": lightBlue,\r\n    \"cyan\": cyan,\r\n    \"teal\": teal,\r\n    \"green\": green,\r\n    \"lightGreen\": lightGreen,\r\n    \"lime\": lime,\r\n    \"amber\": amber\r\n}\r\n\r\nconst invertMap = (mp) => {\r\n    let v = {}\r\n    Object.keys(mp).forEach((item, index) => {\r\n        v[mp[item]] = mp[item]\r\n    })\r\n\r\n    console.log(v);\r\n    return v;\r\n}\r\n\r\nconst invertedMapColor = invertMap(availableColors)\r\n\r\nexport {\r\n    availableColors,\r\n    invertedMapColor\r\n}","import React, { Suspense, Fragment, useState } from 'react';\r\nimport 'assets/css/theme.css'\r\nimport {useRedirect, useRoutes} from 'hookrouter'\r\nimport { Navigation } from 'components/Navigation/Navigation';\r\nimport ApolloClient from 'apollo-boost';\r\nimport {ApolloProvider} from '@apollo/react-hooks'\r\nimport { BASE_URL } from 'cconfig';\r\nimport { Routes } from 'routes';\r\nimport { NotFound } from 'components/NotFound';\r\nimport {CssBaseline} from '@material-ui/core'\r\nimport Container from '@material-ui/core/Container'\r\nimport {createMuiTheme, makeStyles} from '@material-ui/core/styles'\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport {amber, grey, blue} from '@material-ui/core/colors'\r\nimport { Footer } from 'components/Footer/Footer';\r\nimport useLocalStorage from 'components/useLocalStorage'\r\nimport { availableColors, invertedMapColor } from 'cconstants';\r\n\r\nconst client = new ApolloClient({\r\n  uri: [BASE_URL, 'graphql'].join('/') \r\n})\r\n\r\nexport const FONTS_HEAD = ['Archia', 'roboto', 'cursive'].join(',')\r\nexport const FONTS_MAIN = ['Roboto', 'sans-serif'].join(',')\r\n\r\nconst themeConstruct = ({type, ccolor}) => {\r\n  let color = availableColors[ccolor]\r\n  return type == \"light\" ? createMuiTheme({\r\n    palette: {\r\n      type: \"light\",\r\n      primary: {\r\n        light: grey[50],\r\n        main: color[800],\r\n        dark: grey[200]\r\n      },\r\n      secondary: color\r\n    },\r\n    typography: {\r\n      fontFamily: FONTS_HEAD\r\n    },\r\n    textColor: {\r\n      light: grey[900],\r\n      main: grey[800],\r\n      dark: grey[600],\r\n    }\r\n  }) : \r\n  createMuiTheme({\r\n    palette: {\r\n      type: \"dark\",\r\n      primary: {\r\n        light: grey[600],\r\n        main: grey[800],\r\n        dark: grey[900]\r\n      },\r\n      secondary: color\r\n    },\r\n    typography: {\r\n      fontFamily: FONTS_HEAD\r\n    },\r\n    textColor: {\r\n      light: grey[50],\r\n      main: grey[200],\r\n      dark: grey[400],\r\n    }\r\n  }) \r\n}\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  root: {\r\n    paddingTop: theme.spacing(10)\r\n  }\r\n})\r\n\r\nconst evaluateColorString = (item) => {\r\n  console.log(item)\r\n  if(typeof(item) == String) {\r\n    return availableColors[item]\r\n  } else {\r\n    return item\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n\r\n  const {getItem, setItem} = useLocalStorage()\r\n  const styles = useStyles()\r\n  let [currentTheme, setCurrentTheme] = useState(1)\r\n  let [themeSettings, setThemeSettings] = useState({\r\n    type: 'dark',\r\n    color: 'cyan'\r\n  })\r\n\r\n  useRedirect('/', '/home')\r\n  const routesResult = useRoutes(Routes)\r\n\r\n  const HandleChangeTheme = (key, value) => {\r\n    // @Deprecated\r\n    // console.log(\"onChangeSettings Called! - \" + key + \" \" + value)\r\n    // setThemeSettings({\r\n    //   ...themeSettings,\r\n    //   [key]: value\r\n    // })\r\n    // setItem(key, value)\r\n\r\n  }\r\n\r\n  // console.log(themeSettings)\r\n\r\n  return (\r\n    <ThemeProvider theme={themeConstruct({\r\n      type: themeSettings['type'],\r\n      ccolor: themeSettings['color']\r\n    })}>\r\n    <ApolloProvider client={client}>\r\n      <Fragment>\r\n        <Navigation currentSettings={themeSettings} onChangeSettings={HandleChangeTheme} />\r\n        <Suspense fallback={\r\n          <div>\r\n            Loading...\r\n          </div>\r\n        }>\r\n          <CssBaseline />\r\n          <Container style={{paddingTop: \"84px\"}}>\r\n            {routesResult || <NotFound />}\r\n          </Container>\r\n          <Footer />\r\n        </Suspense>\r\n      </Fragment>\r\n    </ApolloProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const BASE_URL=process.env.REACT_APP_PROD_BASE_URL\r\n","import {useReducer} from 'react'\r\nimport createUseContext from  'constate'\r\n\r\nconst ACTIONS = {\r\n    PAGE_LOADING: \"page-loading\"\r\n}\r\n\r\n\r\nconst initStateLoading = false\r\n\r\nconst loadingReducer = (state, action) => {\r\n    console.log(action.type)\r\n    switch(action.type) {\r\n        case ACTIONS.LOADING: \r\n            return action.loading\r\n        default:\r\n            throw new Error('Unspecified type for loading!')\r\n    }\r\n}\r\n\r\nconst usePageLoader = () => {\r\n    const [state, dispatch] = useReducer(loadingReducer, initStateLoading)\r\n    const loading = state\r\n\r\n    const setLoading = (value) => {\r\n        console.log(\"trying set loading to => \" + value)\r\n        if(loading === value) return \r\n        else {\r\n            dispatch({\r\n                type: ACTIONS.LOADING,\r\n                loading: value\r\n            })\r\n        }\r\n    }\r\n\r\n    return {loading, setLoading}\r\n}\r\n\r\nexport const usePageLoadingContext = createUseContext(usePageLoader)","module.exports = __webpack_public_path__ + \"static/media/IGMC.d874c619.png\";","import React from 'react'\r\nimport {Grid, Typography} from '@material-ui/core'\r\nimport { FONTS_HEAD } from 'App'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    padder: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    loc: {\r\n        color: `${theme.palette.grey[400]}7f`,\r\n        fontSize: \"0.8rem\"\r\n    },\r\n    padderLoc: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    fontmain: {\r\n        color: theme.palette.grey[400]\r\n    }\r\n}))\r\n\r\nexport const MapLocation = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Grid container >\r\n            <Grid item xs={12} md={6}>\r\n                <iframe style={{width: \"100%\"}} height=\"320\" id=\"gmap_canvas\" src=\"https://maps.google.com/maps?q=igmc%20shimla&t=&z=17&ie=UTF8&iwloc=&output=embed\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\" />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} style={{padding: \"8px\"}}>\r\n                <Typography className={classes.fontmain} style={{fontFamily: FONTS_HEAD, textTransform: \"uppercase\"}}>Location</Typography>\r\n                <Typography className={`${classes.padderLoc} ${classes.loc}`} style={{fontFamily: FONTS_HEAD}}>\r\n                    Indira Gandhi Medical College & Hospital <br />\r\n                    Ridge Sanjauli Rd, Lakkar Bazar, Shimla, Himachal Pradesh <br /> 171001\r\n                </Typography>\r\n                <br />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import React from 'react'\r\nimport {usePath} from 'hookrouter'\r\nimport { Grid, Typography, makeStyles, Link } from '@material-ui/core'\r\nimport { FONTS_HEAD } from 'App'\r\nimport { MapLocation } from './MapLocation'\r\nimport IGMCImage from 'assets/images/IGMC.png'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    fontmain: {\r\n        fontFamily: FONTS_HEAD,\r\n        color: theme.textColor.main\r\n    },\r\n    copyRight: {\r\n        color: `${theme.textColor.main}3f`\r\n    },\r\n    padder: {\r\n        marginTop: theme.spacing(4),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    ccontainer: {\r\n        position: \"relative\",\r\n        bottom: \"0\",\r\n        marginTop: theme.spacing(4),\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n        backgroundColor: theme.palette.primary.dark\r\n    },\r\n    followus: {\r\n        color: `${theme.textColor.dark}6f`,\r\n        textAlign: \"center\",\r\n        [theme.breakpoints.up('md')]: {\r\n            paddingLeft: '16px',\r\n            textAlign: \"left\",\r\n            alignSelf: \"center\"\r\n        }\r\n    },\r\n    socialicon: {\r\n        fontSize: 20,\r\n        marginLeft: \"6px\",\r\n        marginRight: \"6px\",\r\n        color: `${theme.palette.grey[400]}4f`\r\n    },\r\n    instagram : {\r\n        '&:hover': {\r\n            color: `#405DE6`\r\n        }\r\n    },\r\n    submit_complaint_here : {\r\n        cursor: 'pointer',\r\n        color: theme.palette.secondary.light,\r\n        '&:hover': {\r\n            color: theme.palette.secondary.dark,\r\n        }\r\n    },\r\n    imagelogo: {\r\n        borderRadius: '98px',\r\n        background: theme.palette.grey[400],\r\n        padding: '4px',\r\n        width: 84,\r\n        height: 84,\r\n        marginRight: \"1rem\",\r\n        [theme.breakpoints.down('md')]: {\r\n            marginBottom: \"8px\",\r\n            marginRight: \"auto\"\r\n        }\r\n    },\r\n    divider: {\r\n        textAlign: \"center\",\r\n        [theme.breakpoints.up('md')]: {\r\n            borderRight: `1px solid ${theme.palette.grey[700]}2f`,\r\n            paddingRight: '16px',\r\n            textAlign: \"right\"\r\n        }\r\n    },\r\n    logoText: {\r\n        fontFamily: FONTS_HEAD,\r\n        verticalAlign: 'middle',\r\n        paddingRight: \"8px\",\r\n        display: \"block\",\r\n        color: theme.palette.grey[700],\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'inline',\r\n        },\r\n    }\r\n})) \r\n\r\nexport const Footer = () => {\r\n\r\n    const classes = useStyles()\r\n    const path = usePath()\r\n\r\n    return (\r\n        <Grid container className={classes.ccontainer}>\r\n            {\r\n                path === '/home' ?\r\n                <Grid item xs={12}>\r\n                    <MapLocation />\r\n                </Grid> :\r\n                null\r\n            }\r\n            <Grid item container>\r\n                <Grid item xs={12} md={6} className={`${path === '/home' ? classes.padder : \"\"} ${classes.divider}`}>\r\n                    <img className={classes.imagelogo} src={IGMCImage} alt=\"CSA IGMC LOGO\" />\r\n                    <Typography className={classes.logoText} variant=\"h6\">CSA IGMC</Typography>    \r\n                </Grid>\r\n                <Grid item xs={12} md={6} className={`${path === '/home' ? classes.padder : \"\"} ${classes.followus}`}>\r\n                    <Typography variant=\"subtitle1\" style={{fontFamily: FONTS_HEAD, fontSize: \"12px\"}}>Follow us on Social Media:</Typography> \r\n                    <Link className={`${classes.socialicon} ${classes.instagram}`} href=\"https://instagram.com/atelier_igmc?igshid=1ikxqwc1in0gp\"><i className=\"fab fa-instagram\"></i></Link>\r\n                    <Link className={`${classes.socialicon}`} href=\"#\"><i className=\"fab fa-twitter\"></i></Link>\r\n                    <Link className={`${classes.socialicon}`} href=\"#\"><i className=\"fab fa-facebook-f \"></i></Link>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} style={{textAlign: \"center\", paddingTop: \"16px\", paddingBottom: \"16px\"}}>\r\n                <Typography variant='body1' className={classes.copyRight} style={{textAlign: 'center', fontSize: \"12px\"}} >CopyRight &copy; 2019-20 CSAIGMC. All rights reserved.</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport 'assets/css/theme.css'\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <div className=\"container font-head\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 text-center\">\r\n                    <h1>404 ;(</h1><br />\r\n                    Not Found\r\n                </div>\r\n                <div className=\"col-12 small text-center pt-4\">\r\n                        The resource you are looking for cannot be found.\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}